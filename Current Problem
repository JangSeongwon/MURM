/home/jang/anaconda3/envs/murm1/bin/python3.8 /home/jang/PycharmProjects/rlkit/examples/val/MURM_VAE_Train.py
pygame 1.9.6
Hello from the pygame community. https://www.pygame.org/contribute.html
pybullet build time: Nov 22 2022 15:14:14
shapenet asset path: /home/jang/PycharmProjects/bullet env/roboverse/envs/assets/bulletobjects/ShapeNetCore
Same value for key: min_log_std
duplicate key ignored: trainer_kwargs.beta
Same value for key: awr_weight
Same value for key: reward_transform_kwargs
duplicate key ignored: trainer_kwargs.terminal_transform_kwargs
duplicate key ignored: reward_kwargs.epsilon
Same value for key: min_log_std
duplicate key ignored: trainer_kwargs.beta
Same value for key: awr_weight
Same value for key: reward_transform_kwargs
duplicate key ignored: trainer_kwargs.terminal_transform_kwargs
duplicate key ignored: reward_kwargs.epsilon
Running 2 variants
WARNING: Log directory already exists dataSaving/val/MURM-VAE-Train/trial0/test0
2023-01-12 01:46:20.468408 KST | Variant:
2023-01-12 01:46:20.468716 KST | {
  "add_env_demos": false,
  "add_env_offpolicy_data": false,
  "algo_kwargs": {
    "batch_size": 1024,
    "num_epochs": 1001,
    "num_eval_steps_per_epoch": 1000,
    "num_expl_steps_per_train_loop": 1000,
    "num_trains_per_train_loop": 1000,
    "min_num_steps_before_training": 4000
  },
  "demo_replay_buffer_kwargs": {
    "fraction_future_context": 0.6,
    "fraction_distribution_context": 0.1
  },
  "desired_goal_key": "latent_desired_goal",
  "env_class": "<class 'roboverse.envs.murm_env.MURMENV'>",
  "env_kwargs": {
    "test_env": true
  },
  "evaluation_goal_sampling_mode": "presampled_images",
  "exp_id": 0,
  "exp_name": "val/MURM_VAE_Train",
  "exploration_goal_sampling_mode": "presample_latents",
  "imsize": 128,
  "load_demos": true,
  "logger_config": {
    "run_id": 0,
    "snapshot_gap": 100,
    "snapshot_mode": "gap"
  },
  "max_path_length": 65,
  "observation_key": "latent_observation",
  "path_loader_class": "<class 'rlkit.demos.source.encoder_dict_to_mdp_path_loader.EncoderDictToMDPPathLoader'>",
  "path_loader_kwargs": {
    "delete_after_loading": true,
    "demo_paths": "[{'path': '/media/jang/jang/0ubuntu/demos_dataset/Running_test/demos_delete.pkl', 'obs_dict': True, 'is_demo': True}]",
    "recompute_reward": true
  },
  "policy_class": "<class 'rlkit.torch.sac.policies.gaussian_policy.GaussianPolicy'>",
  "policy_kwargs": {
    "hidden_sizes": [
      256,
      256,
      256,
      256
    ],
    "max_log_std": 0,
    "min_log_std": -6,
    "std_architecture": "values"
  },
  "presampled_goal_kwargs": {
    "eval_goals": "",
    "expl_goals": ""
  },
  "pretrain_policy": true,
  "pretrain_rl": true,
  "qf_kwargs": {
    "hidden_sizes": [
      256,
      256
    ],
    "output_activation": "Clamp()"
  },
  "renderer_kwargs": {
    "create_image_format": "HWC",
    "flatten_image": true,
    "height": 128,
    "output_image_format": "CWH",
    "width": 128
  },
  "replay_buffer_kwargs": {
    "fraction_future_context": 0.6,
    "fraction_distribution_context": 0.1,
    "max_size": 500000
  },
  "reset_keys_map": {
    "image_observation": "initial_latent_state"
  },
  "reward_kwargs": {
    "epsilon": 3.5,
    "reward_type": "sparse"
  },
  "run_id": 0,
  "save_video": false,
  "save_video_kwargs": {
    "save_video_period": 25,
    "pad_color": 0
  },
  "seed": 1,
  "train_model_func": "<function train_vqvae at 0x7fbaf40b9ee0>",
  "train_vae_kwargs": {
    "algo_kwargs": {
      "batch_size": 128,
      "is_auto_encoder": false,
      "key_to_reconstruct": "x_t",
      "lr": 0.0003,
      "priority_function_kwargs": {
        "decoder_distribution": "gaussian_identity_variance",
        "sampling_method": "importance_sampling"
      },
      "skew_config": {
        "method": "vae_prob",
        "power": 0
      },
      "skew_dataset": false,
      "start_skew_epoch": 5000,
      "use_parallel_dataloading": false,
      "weight_decay": 0
    },
    "beta": 0.25,
    "beta_schedule_kwargs": {
      "x_values": [
        0,
        250
      ],
      "y_values": [
        0,
        100
      ]
    },
    "decoder_activation": "sigmoid",
    "dump_skew_debug_plots": false,
    "embedding_dim": 64,
    "generate_vae_dataset_kwargs": {
      "N": 1000,
      "augment_data": false,
      "conditional_vae_dataset": true,
      "dataset_path": {
        "test": "/media/jang/jang/0ubuntu/image_dataset/Running_test/128_600_Single/128_600_Training_Active_Images.npy",
        "train": "/media/jang/jang/0ubuntu/image_dataset/Running_test/128_600_Single/128_600_Training_Active_Images.npy"
      },
      "delete_after_loading": true,
      "enviorment_dataset": false,
      "n_random_steps": 2,
      "non_presampled_goal_img_is_garbage": false,
      "oracle_dataset": false,
      "oracle_dataset_using_set_to_goal": false,
      "random_rollout_data": true,
      "random_rollout_data_set_to_goal": true,
      "save_trajectories": false,
      "show": false,
      "tag": "ccrig_tuning_orig_network",
      "test_p": 0.9,
      "use_cached": false
    },
    "imsize": 128,
    "num_epochs": 100,
    "save_period": 50,
    "training_pixelcnn_with_vae_path": "/media/jang/jang/0ubuntu/image_dataset/Running_test/128_600_Single/300epoches/200.pt",
    "use_linear_dynamics": false,
    "vae_class": "<class 'rlkit.torch.vae.vq_vae.VQ_VAE'>",
    "vae_kwargs": {
      "input_channels": 3,
      "imsize": 128
    },
    "vae_trainer_class": "<class 'rlkit.torch.vae.vq_vae_trainer.VQ_VAETrainer'>"
  },
  "trainer_kwargs": {
    "beta": 0.3,
    "awr_weight": 1.0,
    "awr_use_mle_for_vf": true,
    "awr_sample_actions": false,
    "clip_score": 2,
    "awr_min_q": true,
    "reward_transform_kwargs": null,
    "terminal_transform_kwargs": {
      "m": 0,
      "b": 0
    },
    "discount": 0.99,
    "soft_target_tau": 0.005,
    "target_update_period": 1,
    "policy_lr": 0.0003,
    "qf_lr": 0.0003,
    "reward_scale": 1,
    "use_automatic_entropy_tuning": false,
    "alpha": 0,
    "bc_num_pretrain_steps": 0,
    "q_num_pretrain1_steps": 0,
    "q_num_pretrain2_steps": 25000,
    "policy_weight_decay": 0.0001,
    "q_weight_decay": 0,
    "rl_weight": 1.0,
    "use_awr_update": true,
    "use_reparam_update": false,
    "compute_bc": true,
    "reparam_weight": 0.0,
    "bc_weight": 0.0
  },
  "trial_name": "test0",
  "unique_id": "bdf7c824-2f27-4967-9928-76465a2961f7"
}
Is there demo loaded? == None 
filename /media/jang/jang/0ubuntu/image_dataset/Running_test/128_600_Single/300epoches/200.pt
PATH /media/jang/jang/0ubuntu/image_dataset/Running_test/128_600_Single/300epoches/200.pt
loaded /media/jang/jang/0ubuntu/image_dataset/Running_test/128_600_Single/300epoches/200.pt
-----------------Finished Training VQVAE2-----------------
-----------------Start Training Prior-----------------
pixelcnn kwargs {}
 train_img_loader = none, cached_dataset_path = False None False
filename /media/jang/jang/0ubuntu/image_dataset/Running_test/128_600_Single/128_600_Training_Active_Images.npy
PATH /media/jang/jang/0ubuntu/image_dataset/Running_test/128_600_Single/128_600_Training_Active_Images.npy
WARNING:root:An output image format of CHW is recommended, as this is the default PyTorch format.
loaded /media/jang/jang/0ubuntu/image_dataset/Running_test/128_600_Single/128_600_Training_Active_Images.npy
n = episode number 600
FORMAT = 600 275 49152(128*128*3) (600, 275, 49152)
Using initial images from observations in episodes
  0%|          | 0/600 [00:00<?, ?it/s]Checking VQVAE for PixelCNN
  0%|          | 1/600 [00:01<15:50,  1.59s/it]Checking VQVAE for PixelCNN
  0%|          | 2/600 [00:02<14:44,  1.48s/it]Checking VQVAE for PixelCNN
  0%|          | 3/600 [00:04<14:16,  1.43s/it]Checking VQVAE for PixelCNN
  1%|          | 4/600 [00:05<14:02,  1.41s/it]Checking VQVAE for PixelCNN
  1%|          | 5/600 [00:07<13:54,  1.40s/it]Checking VQVAE for PixelCNN
  1%|          | 6/600 [00:08<13:48,  1.40s/it]Checking VQVAE for PixelCNN
  1%|          | 7/600 [00:09<13:45,  1.39s/it]Checking VQVAE for PixelCNN
  1%|▏         | 8/600 [00:11<13:42,  1.39s/it]Checking VQVAE for PixelCNN
  2%|▏         | 9/600 [00:12<13:40,  1.39s/it]Checking VQVAE for PixelCNN
  2%|▏         | 10/600 [00:14<13:37,  1.39s/it]Checking VQVAE for PixelCNN
  2%|▏         | 11/600 [00:15<13:36,  1.39s/it]Checking VQVAE for PixelCNN
  2%|▏         | 12/600 [00:16<13:35,  1.39s/it]Checking VQVAE for PixelCNN
  2%|▏         | 13/600 [00:18<13:34,  1.39s/it]Checking VQVAE for PixelCNN
  2%|▏         | 14/600 [00:19<13:32,  1.39s/it]Checking VQVAE for PixelCNN
  2%|▎         | 15/600 [00:21<13:33,  1.39s/it]Checking VQVAE for PixelCNN
  3%|▎         | 16/600 [00:22<13:53,  1.43s/it]Checking VQVAE for PixelCNN
  3%|▎         | 17/600 [00:24<14:16,  1.47s/it]Checking VQVAE for PixelCNN
  3%|▎         | 18/600 [00:25<14:03,  1.45s/it]Checking VQVAE for PixelCNN
  3%|▎         | 19/600 [00:26<13:55,  1.44s/it]Checking VQVAE for PixelCNN
  3%|▎         | 20/600 [00:28<13:54,  1.44s/it]Checking VQVAE for PixelCNN
  4%|▎         | 21/600 [00:29<13:44,  1.42s/it]Checking VQVAE for PixelCNN
  4%|▎         | 22/600 [00:31<13:37,  1.41s/it]Checking VQVAE for PixelCNN
  4%|▍         | 23/600 [00:32<13:32,  1.41s/it]Checking VQVAE for PixelCNN
  4%|▍         | 24/600 [00:33<13:27,  1.40s/it]Checking VQVAE for PixelCNN
  4%|▍         | 25/600 [00:35<13:24,  1.40s/it]Checking VQVAE for PixelCNN
  4%|▍         | 26/600 [00:36<13:33,  1.42s/it]Checking VQVAE for PixelCNN
  4%|▍         | 27/600 [00:38<13:27,  1.41s/it]Checking VQVAE for PixelCNN
  5%|▍         | 28/600 [00:39<13:22,  1.40s/it]Checking VQVAE for PixelCNN
  5%|▍         | 29/600 [00:40<13:21,  1.40s/it]Checking VQVAE for PixelCNN
  5%|▌         | 30/600 [00:42<13:17,  1.40s/it]Checking VQVAE for PixelCNN
  5%|▌         | 31/600 [00:43<13:15,  1.40s/it]Checking VQVAE for PixelCNN
  5%|▌         | 32/600 [00:45<13:13,  1.40s/it]Checking VQVAE for PixelCNN
  6%|▌         | 33/600 [00:46<13:11,  1.40s/it]Checking VQVAE for PixelCNN
  6%|▌         | 34/600 [00:47<13:13,  1.40s/it]Checking VQVAE for PixelCNN
  6%|▌         | 35/600 [00:49<13:10,  1.40s/it]Checking VQVAE for PixelCNN
  6%|▌         | 36/600 [00:50<13:11,  1.40s/it]Checking VQVAE for PixelCNN
  6%|▌         | 37/600 [00:52<13:08,  1.40s/it]Checking VQVAE for PixelCNN
  6%|▋         | 38/600 [00:53<13:06,  1.40s/it]Checking VQVAE for PixelCNN
  6%|▋         | 39/600 [00:54<13:04,  1.40s/it]Checking VQVAE for PixelCNN
  7%|▋         | 40/600 [00:56<13:02,  1.40s/it]Checking VQVAE for PixelCNN
  7%|▋         | 41/600 [00:57<13:01,  1.40s/it]Checking VQVAE for PixelCNN
  7%|▋         | 42/600 [00:59<12:59,  1.40s/it]Checking VQVAE for PixelCNN
  7%|▋         | 43/600 [01:00<12:58,  1.40s/it]Checking VQVAE for PixelCNN
  7%|▋         | 44/600 [01:01<12:56,  1.40s/it]Checking VQVAE for PixelCNN
  8%|▊         | 45/600 [01:03<12:56,  1.40s/it]Checking VQVAE for PixelCNN
  8%|▊         | 46/600 [01:04<12:54,  1.40s/it]Checking VQVAE for PixelCNN
  8%|▊         | 47/600 [01:06<12:52,  1.40s/it]Checking VQVAE for PixelCNN
  8%|▊         | 48/600 [01:07<12:51,  1.40s/it]Checking VQVAE for PixelCNN
  8%|▊         | 49/600 [01:08<12:50,  1.40s/it]Checking VQVAE for PixelCNN
  8%|▊         | 50/600 [01:10<12:48,  1.40s/it]Checking VQVAE for PixelCNN
  8%|▊         | 51/600 [01:11<12:47,  1.40s/it]Checking VQVAE for PixelCNN
  9%|▊         | 52/600 [01:13<12:46,  1.40s/it]Checking VQVAE for PixelCNN
  9%|▉         | 53/600 [01:14<12:44,  1.40s/it]Checking VQVAE for PixelCNN
  9%|▉         | 54/600 [01:15<12:43,  1.40s/it]Checking VQVAE for PixelCNN
  9%|▉         | 55/600 [01:17<12:42,  1.40s/it]Checking VQVAE for PixelCNN
  9%|▉         | 56/600 [01:18<12:41,  1.40s/it]Checking VQVAE for PixelCNN
 10%|▉         | 57/600 [01:20<12:39,  1.40s/it]Checking VQVAE for PixelCNN
 10%|▉         | 58/600 [01:21<12:38,  1.40s/it]Checking VQVAE for PixelCNN
 10%|▉         | 59/600 [01:22<12:36,  1.40s/it]Checking VQVAE for PixelCNN
 10%|█         | 60/600 [01:24<12:35,  1.40s/it]Checking VQVAE for PixelCNN
 10%|█         | 61/600 [01:25<12:34,  1.40s/it]Checking VQVAE for PixelCNN
 10%|█         | 62/600 [01:27<12:33,  1.40s/it]Checking VQVAE for PixelCNN
 10%|█         | 63/600 [01:28<12:32,  1.40s/it]Checking VQVAE for PixelCNN
 11%|█         | 64/600 [01:29<12:30,  1.40s/it]Checking VQVAE for PixelCNN
 11%|█         | 65/600 [01:31<12:29,  1.40s/it]Checking VQVAE for PixelCNN
 11%|█         | 66/600 [01:32<12:28,  1.40s/it]Checking VQVAE for PixelCNN
 11%|█         | 67/600 [01:34<12:27,  1.40s/it]Checking VQVAE for PixelCNN
 11%|█▏        | 68/600 [01:35<12:26,  1.40s/it]Checking VQVAE for PixelCNN
 12%|█▏        | 69/600 [01:36<12:25,  1.40s/it]Checking VQVAE for PixelCNN
 12%|█▏        | 70/600 [01:38<12:23,  1.40s/it]Checking VQVAE for PixelCNN
 12%|█▏        | 71/600 [01:39<12:22,  1.40s/it]Checking VQVAE for PixelCNN
 12%|█▏        | 72/600 [01:41<12:20,  1.40s/it]Checking VQVAE for PixelCNN
 12%|█▏        | 73/600 [01:42<12:19,  1.40s/it]Checking VQVAE for PixelCNN
 12%|█▏        | 74/600 [01:43<12:18,  1.40s/it]Checking VQVAE for PixelCNN
 12%|█▎        | 75/600 [01:45<12:17,  1.40s/it]Checking VQVAE for PixelCNN
 13%|█▎        | 76/600 [01:46<12:16,  1.40s/it]Checking VQVAE for PixelCNN
 13%|█▎        | 77/600 [01:48<12:14,  1.40s/it]Checking VQVAE for PixelCNN
 13%|█▎        | 78/600 [01:49<12:13,  1.40s/it]Checking VQVAE for PixelCNN
 13%|█▎        | 79/600 [01:50<12:11,  1.40s/it]Checking VQVAE for PixelCNN
 13%|█▎        | 80/600 [01:52<12:11,  1.41s/it]Checking VQVAE for PixelCNN
 14%|█▎        | 81/600 [01:53<12:09,  1.41s/it]Checking VQVAE for PixelCNN
 14%|█▎        | 82/600 [01:55<12:08,  1.41s/it]Checking VQVAE for PixelCNN
 14%|█▍        | 83/600 [01:56<12:07,  1.41s/it]Checking VQVAE for PixelCNN
 14%|█▍        | 84/600 [01:57<12:05,  1.41s/it]Checking VQVAE for PixelCNN
 14%|█▍        | 85/600 [01:59<12:04,  1.41s/it]Checking VQVAE for PixelCNN
 14%|█▍        | 86/600 [02:00<12:04,  1.41s/it]Checking VQVAE for PixelCNN
 14%|█▍        | 87/600 [02:02<12:03,  1.41s/it]Checking VQVAE for PixelCNN
 15%|█▍        | 88/600 [02:03<12:01,  1.41s/it]Checking VQVAE for PixelCNN
 15%|█▍        | 89/600 [02:05<12:00,  1.41s/it]Checking VQVAE for PixelCNN
 15%|█▌        | 90/600 [02:06<11:59,  1.41s/it]Checking VQVAE for PixelCNN
 15%|█▌        | 91/600 [02:07<11:57,  1.41s/it]Checking VQVAE for PixelCNN
 15%|█▌        | 92/600 [02:09<11:56,  1.41s/it]Checking VQVAE for PixelCNN
 16%|█▌        | 93/600 [02:10<11:55,  1.41s/it]Checking VQVAE for PixelCNN
 16%|█▌        | 94/600 [02:12<11:52,  1.41s/it]Checking VQVAE for PixelCNN
 16%|█▌        | 95/600 [02:13<11:51,  1.41s/it]Checking VQVAE for PixelCNN
 16%|█▌        | 96/600 [02:14<11:50,  1.41s/it]Checking VQVAE for PixelCNN
 16%|█▌        | 97/600 [02:16<12:04,  1.44s/it]Checking VQVAE for PixelCNN
 16%|█▋        | 98/600 [02:17<11:57,  1.43s/it]Checking VQVAE for PixelCNN
 16%|█▋        | 99/600 [02:19<11:53,  1.42s/it]Checking VQVAE for PixelCNN
 17%|█▋        | 100/600 [02:20<11:49,  1.42s/it]Checking VQVAE for PixelCNN
 17%|█▋        | 101/600 [02:22<11:46,  1.42s/it]Checking VQVAE for PixelCNN
 17%|█▋        | 102/600 [02:23<11:44,  1.41s/it]Checking VQVAE for PixelCNN
 17%|█▋        | 103/600 [02:24<11:42,  1.41s/it]Checking VQVAE for PixelCNN
 17%|█▋        | 104/600 [02:26<11:41,  1.41s/it]Checking VQVAE for PixelCNN
 18%|█▊        | 105/600 [02:27<11:42,  1.42s/it]Checking VQVAE for PixelCNN
 18%|█▊        | 106/600 [02:29<11:43,  1.42s/it]Checking VQVAE for PixelCNN
 18%|█▊        | 107/600 [02:30<11:43,  1.43s/it]Checking VQVAE for PixelCNN
 18%|█▊        | 108/600 [02:32<11:43,  1.43s/it]Checking VQVAE for PixelCNN
 18%|█▊        | 109/600 [02:33<11:43,  1.43s/it]Checking VQVAE for PixelCNN
 18%|█▊        | 110/600 [02:34<11:42,  1.43s/it]Checking VQVAE for PixelCNN
 18%|█▊        | 111/600 [02:36<11:40,  1.43s/it]Checking VQVAE for PixelCNN
 19%|█▊        | 112/600 [02:37<11:39,  1.43s/it]Checking VQVAE for PixelCNN
 19%|█▉        | 113/600 [02:39<11:38,  1.43s/it]Checking VQVAE for PixelCNN
 19%|█▉        | 114/600 [02:40<11:45,  1.45s/it]Checking VQVAE for PixelCNN
 19%|█▉        | 115/600 [02:42<11:36,  1.44s/it]Checking VQVAE for PixelCNN
 19%|█▉        | 116/600 [02:43<11:30,  1.43s/it]Checking VQVAE for PixelCNN
 20%|█▉        | 117/600 [02:44<11:33,  1.44s/it]Checking VQVAE for PixelCNN
 20%|█▉        | 118/600 [02:46<11:28,  1.43s/it]Checking VQVAE for PixelCNN
 20%|█▉        | 119/600 [02:47<11:23,  1.42s/it]Checking VQVAE for PixelCNN
 20%|██        | 120/600 [02:49<11:21,  1.42s/it]Checking VQVAE for PixelCNN
 20%|██        | 121/600 [02:50<11:18,  1.42s/it]Checking VQVAE for PixelCNN
 20%|██        | 122/600 [02:51<11:15,  1.41s/it]Checking VQVAE for PixelCNN
 20%|██        | 123/600 [02:53<11:15,  1.42s/it]Checking VQVAE for PixelCNN
 21%|██        | 124/600 [02:54<11:14,  1.42s/it]Checking VQVAE for PixelCNN
 21%|██        | 125/600 [02:56<11:13,  1.42s/it]Checking VQVAE for PixelCNN
 21%|██        | 126/600 [02:57<11:12,  1.42s/it]Checking VQVAE for PixelCNN
 21%|██        | 127/600 [02:59<11:10,  1.42s/it]Checking VQVAE for PixelCNN
 21%|██▏       | 128/600 [03:00<11:09,  1.42s/it]Checking VQVAE for PixelCNN
 22%|██▏       | 129/600 [03:01<11:08,  1.42s/it]Checking VQVAE for PixelCNN
 22%|██▏       | 130/600 [03:03<11:06,  1.42s/it]Checking VQVAE for PixelCNN
 22%|██▏       | 131/600 [03:04<11:05,  1.42s/it]Checking VQVAE for PixelCNN
 22%|██▏       | 132/600 [03:06<11:05,  1.42s/it]Checking VQVAE for PixelCNN
 22%|██▏       | 133/600 [03:07<11:03,  1.42s/it]Checking VQVAE for PixelCNN
 22%|██▏       | 134/600 [03:09<11:01,  1.42s/it]Checking VQVAE for PixelCNN
 22%|██▎       | 135/600 [03:10<10:59,  1.42s/it]Checking VQVAE for PixelCNN
 23%|██▎       | 136/600 [03:11<10:58,  1.42s/it]Checking VQVAE for PixelCNN
 23%|██▎       | 137/600 [03:13<10:57,  1.42s/it]Checking VQVAE for PixelCNN
 23%|██▎       | 138/600 [03:14<10:55,  1.42s/it]Checking VQVAE for PixelCNN
 23%|██▎       | 139/600 [03:16<10:56,  1.42s/it]Checking VQVAE for PixelCNN
 23%|██▎       | 140/600 [03:17<10:55,  1.42s/it]Checking VQVAE for PixelCNN
 24%|██▎       | 141/600 [03:19<10:54,  1.43s/it]Checking VQVAE for PixelCNN
 24%|██▎       | 142/600 [03:20<10:55,  1.43s/it]Checking VQVAE for PixelCNN
 24%|██▍       | 143/600 [03:21<10:52,  1.43s/it]Checking VQVAE for PixelCNN
 24%|██▍       | 144/600 [03:23<10:49,  1.42s/it]Checking VQVAE for PixelCNN
 24%|██▍       | 145/600 [03:24<10:47,  1.42s/it]Checking VQVAE for PixelCNN
 24%|██▍       | 146/600 [03:26<10:45,  1.42s/it]Checking VQVAE for PixelCNN
 24%|██▍       | 147/600 [03:27<10:43,  1.42s/it]Checking VQVAE for PixelCNN
 25%|██▍       | 148/600 [03:28<10:41,  1.42s/it]Checking VQVAE for PixelCNN
 25%|██▍       | 149/600 [03:30<10:39,  1.42s/it]Checking VQVAE for PixelCNN
 25%|██▌       | 150/600 [03:31<10:38,  1.42s/it]Checking VQVAE for PixelCNN
 25%|██▌       | 151/600 [03:33<10:37,  1.42s/it]Checking VQVAE for PixelCNN
 25%|██▌       | 152/600 [03:34<10:57,  1.47s/it]Checking VQVAE for PixelCNN
 26%|██▌       | 153/600 [03:36<10:49,  1.45s/it]Checking VQVAE for PixelCNN
 26%|██▌       | 154/600 [03:37<10:43,  1.44s/it]Checking VQVAE for PixelCNN
 26%|██▌       | 155/600 [03:39<10:38,  1.44s/it]Checking VQVAE for PixelCNN
 26%|██▌       | 156/600 [03:40<10:35,  1.43s/it]Checking VQVAE for PixelCNN
 26%|██▌       | 157/600 [03:41<10:33,  1.43s/it]Checking VQVAE for PixelCNN
 26%|██▋       | 158/600 [03:43<10:30,  1.43s/it]Checking VQVAE for PixelCNN
 26%|██▋       | 159/600 [03:44<10:28,  1.43s/it]Checking VQVAE for PixelCNN
 27%|██▋       | 160/600 [03:46<10:26,  1.42s/it]Checking VQVAE for PixelCNN
 27%|██▋       | 161/600 [03:47<10:30,  1.44s/it]Checking VQVAE for PixelCNN
 27%|██▋       | 162/600 [03:49<10:28,  1.44s/it]Checking VQVAE for PixelCNN
 27%|██▋       | 163/600 [03:50<10:25,  1.43s/it]Checking VQVAE for PixelCNN
 27%|██▋       | 164/600 [03:51<10:23,  1.43s/it]Checking VQVAE for PixelCNN
 28%|██▊       | 165/600 [03:53<10:20,  1.43s/it]Checking VQVAE for PixelCNN
 28%|██▊       | 166/600 [03:54<10:18,  1.43s/it]Checking VQVAE for PixelCNN
 28%|██▊       | 167/600 [03:56<10:55,  1.51s/it]Checking VQVAE for PixelCNN
 28%|██▊       | 168/600 [03:57<10:42,  1.49s/it]Checking VQVAE for PixelCNN
 28%|██▊       | 169/600 [03:59<10:31,  1.46s/it]Checking VQVAE for PixelCNN
 28%|██▊       | 170/600 [04:00<10:33,  1.47s/it]Checking VQVAE for PixelCNN
 28%|██▊       | 171/600 [04:02<10:24,  1.45s/it]Checking VQVAE for PixelCNN
 29%|██▊       | 172/600 [04:03<10:16,  1.44s/it]Checking VQVAE for PixelCNN
 29%|██▉       | 173/600 [04:05<10:11,  1.43s/it]Checking VQVAE for PixelCNN
 29%|██▉       | 174/600 [04:06<10:07,  1.43s/it]Checking VQVAE for PixelCNN
 29%|██▉       | 175/600 [04:07<10:04,  1.42s/it]Checking VQVAE for PixelCNN
 29%|██▉       | 176/600 [04:09<10:03,  1.42s/it]Checking VQVAE for PixelCNN
 30%|██▉       | 177/600 [04:10<10:00,  1.42s/it]Checking VQVAE for PixelCNN
 30%|██▉       | 178/600 [04:12<09:58,  1.42s/it]Checking VQVAE for PixelCNN
 30%|██▉       | 179/600 [04:13<09:58,  1.42s/it]Checking VQVAE for PixelCNN
 30%|███       | 180/600 [04:14<09:57,  1.42s/it]Checking VQVAE for PixelCNN
 30%|███       | 181/600 [04:16<09:55,  1.42s/it]Checking VQVAE for PixelCNN
 30%|███       | 182/600 [04:17<09:54,  1.42s/it]Checking VQVAE for PixelCNN
 30%|███       | 183/600 [04:19<09:52,  1.42s/it]Checking VQVAE for PixelCNN
 31%|███       | 184/600 [04:20<09:51,  1.42s/it]Checking VQVAE for PixelCNN
 31%|███       | 185/600 [04:22<09:49,  1.42s/it]Checking VQVAE for PixelCNN
 31%|███       | 186/600 [04:23<09:48,  1.42s/it]Checking VQVAE for PixelCNN
 31%|███       | 187/600 [04:24<09:47,  1.42s/it]Checking VQVAE for PixelCNN
 31%|███▏      | 188/600 [04:26<09:46,  1.42s/it]Checking VQVAE for PixelCNN
 32%|███▏      | 189/600 [04:27<09:44,  1.42s/it]Checking VQVAE for PixelCNN
 32%|███▏      | 190/600 [04:29<09:43,  1.42s/it]Checking VQVAE for PixelCNN
 32%|███▏      | 191/600 [04:30<09:42,  1.42s/it]Checking VQVAE for PixelCNN
 32%|███▏      | 192/600 [04:32<09:40,  1.42s/it]Checking VQVAE for PixelCNN
 32%|███▏      | 193/600 [04:33<09:39,  1.42s/it]Checking VQVAE for PixelCNN
 32%|███▏      | 194/600 [04:34<09:42,  1.43s/it]Checking VQVAE for PixelCNN
 32%|███▎      | 195/600 [04:36<09:41,  1.44s/it]Checking VQVAE for PixelCNN
 33%|███▎      | 196/600 [04:37<09:42,  1.44s/it]Checking VQVAE for PixelCNN
 33%|███▎      | 197/600 [04:39<09:41,  1.44s/it]Checking VQVAE for PixelCNN
 33%|███▎      | 198/600 [04:40<09:41,  1.45s/it]Checking VQVAE for PixelCNN
 33%|███▎      | 199/600 [04:42<09:40,  1.45s/it]Checking VQVAE for PixelCNN
 33%|███▎      | 200/600 [04:43<09:40,  1.45s/it]Checking VQVAE for PixelCNN
 34%|███▎      | 201/600 [04:45<09:36,  1.44s/it]Checking VQVAE for PixelCNN
 34%|███▎      | 202/600 [04:46<09:33,  1.44s/it]Checking VQVAE for PixelCNN
 34%|███▍      | 203/600 [04:47<09:31,  1.44s/it]Checking VQVAE for PixelCNN
 34%|███▍      | 204/600 [04:49<09:29,  1.44s/it]Checking VQVAE for PixelCNN
 34%|███▍      | 205/600 [04:50<09:27,  1.44s/it]Checking VQVAE for PixelCNN
 34%|███▍      | 206/600 [04:52<09:27,  1.44s/it]Checking VQVAE for PixelCNN
 34%|███▍      | 207/600 [04:53<09:25,  1.44s/it]Checking VQVAE for PixelCNN
 35%|███▍      | 208/600 [04:55<09:23,  1.44s/it]Checking VQVAE for PixelCNN
 35%|███▍      | 209/600 [04:56<09:21,  1.44s/it]Checking VQVAE for PixelCNN
 35%|███▌      | 210/600 [04:57<09:22,  1.44s/it]Checking VQVAE for PixelCNN
 35%|███▌      | 211/600 [04:59<09:20,  1.44s/it]Checking VQVAE for PixelCNN
 35%|███▌      | 212/600 [05:00<09:18,  1.44s/it]Checking VQVAE for PixelCNN
 36%|███▌      | 213/600 [05:02<09:16,  1.44s/it]Checking VQVAE for PixelCNN
 36%|███▌      | 214/600 [05:03<09:14,  1.44s/it]Checking VQVAE for PixelCNN
 36%|███▌      | 215/600 [05:05<09:12,  1.44s/it]Checking VQVAE for PixelCNN
 36%|███▌      | 216/600 [05:06<09:10,  1.43s/it]Checking VQVAE for PixelCNN
 36%|███▌      | 217/600 [05:08<09:09,  1.44s/it]Checking VQVAE for PixelCNN
 36%|███▋      | 218/600 [05:09<09:07,  1.43s/it]Checking VQVAE for PixelCNN
 36%|███▋      | 219/600 [05:10<09:06,  1.44s/it]Checking VQVAE for PixelCNN
 37%|███▋      | 220/600 [05:12<09:05,  1.43s/it]Checking VQVAE for PixelCNN
 37%|███▋      | 221/600 [05:13<09:03,  1.43s/it]Checking VQVAE for PixelCNN
 37%|███▋      | 222/600 [05:15<09:01,  1.43s/it]Checking VQVAE for PixelCNN
 37%|███▋      | 223/600 [05:16<09:00,  1.43s/it]Checking VQVAE for PixelCNN
 37%|███▋      | 224/600 [05:18<08:58,  1.43s/it]Checking VQVAE for PixelCNN
 38%|███▊      | 225/600 [05:19<08:57,  1.43s/it]Checking VQVAE for PixelCNN
 38%|███▊      | 226/600 [05:20<08:55,  1.43s/it]Checking VQVAE for PixelCNN
 38%|███▊      | 227/600 [05:22<08:54,  1.43s/it]Checking VQVAE for PixelCNN
 38%|███▊      | 228/600 [05:23<08:52,  1.43s/it]Checking VQVAE for PixelCNN
 38%|███▊      | 229/600 [05:25<08:51,  1.43s/it]Checking VQVAE for PixelCNN
 38%|███▊      | 230/600 [05:26<08:50,  1.43s/it]Checking VQVAE for PixelCNN
 38%|███▊      | 231/600 [05:28<08:48,  1.43s/it]Checking VQVAE for PixelCNN
 39%|███▊      | 232/600 [05:29<08:47,  1.43s/it]Checking VQVAE for PixelCNN
 39%|███▉      | 233/600 [05:30<08:45,  1.43s/it]Checking VQVAE for PixelCNN
 39%|███▉      | 234/600 [05:32<08:44,  1.43s/it]Checking VQVAE for PixelCNN
 39%|███▉      | 235/600 [05:33<08:42,  1.43s/it]Checking VQVAE for PixelCNN
 39%|███▉      | 236/600 [05:35<08:41,  1.43s/it]Checking VQVAE for PixelCNN
 40%|███▉      | 237/600 [05:36<08:44,  1.44s/it]Checking VQVAE for PixelCNN
 40%|███▉      | 238/600 [05:38<08:41,  1.44s/it]Checking VQVAE for PixelCNN
 40%|███▉      | 239/600 [05:39<08:39,  1.44s/it]Checking VQVAE for PixelCNN
 40%|████      | 240/600 [05:41<08:36,  1.44s/it]Checking VQVAE for PixelCNN
 40%|████      | 241/600 [05:42<08:34,  1.43s/it]Checking VQVAE for PixelCNN
 40%|████      | 242/600 [05:43<08:33,  1.43s/it]Checking VQVAE for PixelCNN
 40%|████      | 243/600 [05:45<08:31,  1.43s/it]Checking VQVAE for PixelCNN
 41%|████      | 244/600 [05:46<08:30,  1.43s/it]Checking VQVAE for PixelCNN
 41%|████      | 245/600 [05:48<08:28,  1.43s/it]Checking VQVAE for PixelCNN
 41%|████      | 246/600 [05:49<08:27,  1.43s/it]Checking VQVAE for PixelCNN
 41%|████      | 247/600 [05:51<08:25,  1.43s/it]Checking VQVAE for PixelCNN
 41%|████▏     | 248/600 [05:52<08:23,  1.43s/it]Checking VQVAE for PixelCNN
 42%|████▏     | 249/600 [05:53<08:22,  1.43s/it]Checking VQVAE for PixelCNN
 42%|████▏     | 250/600 [05:55<08:20,  1.43s/it]Checking VQVAE for PixelCNN
 42%|████▏     | 251/600 [05:56<08:18,  1.43s/it]Checking VQVAE for PixelCNN
 42%|████▏     | 252/600 [05:58<08:17,  1.43s/it]Checking VQVAE for PixelCNN
 42%|████▏     | 253/600 [05:59<08:16,  1.43s/it]Checking VQVAE for PixelCNN
 42%|████▏     | 254/600 [06:01<08:15,  1.43s/it]Checking VQVAE for PixelCNN
 42%|████▎     | 255/600 [06:02<08:15,  1.44s/it]Checking VQVAE for PixelCNN
 43%|████▎     | 256/600 [06:03<08:13,  1.44s/it]Checking VQVAE for PixelCNN
 43%|████▎     | 257/600 [06:05<08:12,  1.43s/it]Checking VQVAE for PixelCNN
 43%|████▎     | 258/600 [06:06<08:10,  1.43s/it]Checking VQVAE for PixelCNN
 43%|████▎     | 259/600 [06:08<08:08,  1.43s/it]Checking VQVAE for PixelCNN
 43%|████▎     | 260/600 [06:09<08:06,  1.43s/it]Checking VQVAE for PixelCNN
 44%|████▎     | 261/600 [06:11<08:24,  1.49s/it]Checking VQVAE for PixelCNN
 44%|████▎     | 262/600 [06:12<08:17,  1.47s/it]Checking VQVAE for PixelCNN
 44%|████▍     | 263/600 [06:14<08:17,  1.48s/it]Checking VQVAE for PixelCNN
 44%|████▍     | 264/600 [06:15<08:11,  1.46s/it]Checking VQVAE for PixelCNN
 44%|████▍     | 265/600 [06:17<08:07,  1.45s/it]Checking VQVAE for PixelCNN
 44%|████▍     | 266/600 [06:18<08:04,  1.45s/it]Checking VQVAE for PixelCNN
 44%|████▍     | 267/600 [06:19<08:00,  1.44s/it]Checking VQVAE for PixelCNN
 45%|████▍     | 268/600 [06:21<08:05,  1.46s/it]Checking VQVAE for PixelCNN
 45%|████▍     | 269/600 [06:23<08:13,  1.49s/it]Checking VQVAE for PixelCNN
 45%|████▌     | 270/600 [06:24<08:05,  1.47s/it]Checking VQVAE for PixelCNN
 45%|████▌     | 271/600 [06:25<08:00,  1.46s/it]Checking VQVAE for PixelCNN
 45%|████▌     | 272/600 [06:27<07:56,  1.45s/it]Checking VQVAE for PixelCNN
 46%|████▌     | 273/600 [06:28<07:55,  1.45s/it]Checking VQVAE for PixelCNN
 46%|████▌     | 274/600 [06:30<07:51,  1.45s/it]Checking VQVAE for PixelCNN
 46%|████▌     | 275/600 [06:31<07:48,  1.44s/it]Checking VQVAE for PixelCNN
 46%|████▌     | 276/600 [06:33<07:46,  1.44s/it]Checking VQVAE for PixelCNN
 46%|████▌     | 277/600 [06:34<07:44,  1.44s/it]Checking VQVAE for PixelCNN
 46%|████▋     | 278/600 [06:35<07:42,  1.44s/it]Checking VQVAE for PixelCNN
 46%|████▋     | 279/600 [06:37<07:40,  1.43s/it]Checking VQVAE for PixelCNN
 47%|████▋     | 280/600 [06:38<07:40,  1.44s/it]Checking VQVAE for PixelCNN
 47%|████▋     | 281/600 [06:40<07:40,  1.44s/it]Checking VQVAE for PixelCNN
 47%|████▋     | 282/600 [06:41<07:38,  1.44s/it]Checking VQVAE for PixelCNN
 47%|████▋     | 283/600 [06:43<07:36,  1.44s/it]Checking VQVAE for PixelCNN
 47%|████▋     | 284/600 [06:44<07:34,  1.44s/it]Checking VQVAE for PixelCNN
 48%|████▊     | 285/600 [06:45<07:32,  1.44s/it]Checking VQVAE for PixelCNN
 48%|████▊     | 286/600 [06:47<07:30,  1.44s/it]Checking VQVAE for PixelCNN
 48%|████▊     | 287/600 [06:48<07:30,  1.44s/it]Checking VQVAE for PixelCNN
 48%|████▊     | 288/600 [06:50<07:29,  1.44s/it]Checking VQVAE for PixelCNN
 48%|████▊     | 289/600 [06:51<07:27,  1.44s/it]Checking VQVAE for PixelCNN
 48%|████▊     | 290/600 [06:53<07:24,  1.44s/it]Checking VQVAE for PixelCNN
 48%|████▊     | 291/600 [06:54<07:22,  1.43s/it]Checking VQVAE for PixelCNN
 49%|████▊     | 292/600 [06:56<07:21,  1.43s/it]Checking VQVAE for PixelCNN
 49%|████▉     | 293/600 [06:57<07:20,  1.43s/it]Checking VQVAE for PixelCNN
 49%|████▉     | 294/600 [06:58<07:19,  1.43s/it]Checking VQVAE for PixelCNN
 49%|████▉     | 295/600 [07:00<07:17,  1.43s/it]Checking VQVAE for PixelCNN
 49%|████▉     | 296/600 [07:01<07:20,  1.45s/it]Checking VQVAE for PixelCNN
 50%|████▉     | 297/600 [07:03<07:19,  1.45s/it]Checking VQVAE for PixelCNN
 50%|████▉     | 298/600 [07:04<07:18,  1.45s/it]Checking VQVAE for PixelCNN
 50%|████▉     | 299/600 [07:06<07:16,  1.45s/it]Checking VQVAE for PixelCNN
 50%|█████     | 300/600 [07:07<07:15,  1.45s/it]Checking VQVAE for PixelCNN
 50%|█████     | 301/600 [07:09<07:12,  1.45s/it]Checking VQVAE for PixelCNN
 50%|█████     | 302/600 [07:10<07:12,  1.45s/it]Checking VQVAE for PixelCNN
 50%|█████     | 303/600 [07:11<07:11,  1.45s/it]Checking VQVAE for PixelCNN
 51%|█████     | 304/600 [07:13<07:09,  1.45s/it]Checking VQVAE for PixelCNN
 51%|█████     | 305/600 [07:14<07:08,  1.45s/it]Checking VQVAE for PixelCNN
 51%|█████     | 306/600 [07:16<07:08,  1.46s/it]Checking VQVAE for PixelCNN
 51%|█████     | 307/600 [07:17<07:05,  1.45s/it]Checking VQVAE for PixelCNN
 51%|█████▏    | 308/600 [07:19<07:03,  1.45s/it]Checking VQVAE for PixelCNN
 52%|█████▏    | 309/600 [07:20<07:01,  1.45s/it]Checking VQVAE for PixelCNN
 52%|█████▏    | 310/600 [07:22<07:00,  1.45s/it]Checking VQVAE for PixelCNN
 52%|█████▏    | 311/600 [07:23<06:59,  1.45s/it]Checking VQVAE for PixelCNN
 52%|█████▏    | 312/600 [07:25<06:56,  1.45s/it]Checking VQVAE for PixelCNN
 52%|█████▏    | 313/600 [07:26<06:54,  1.45s/it]Checking VQVAE for PixelCNN
 52%|█████▏    | 314/600 [07:28<07:02,  1.48s/it]Checking VQVAE for PixelCNN
 52%|█████▎    | 315/600 [07:29<06:58,  1.47s/it]Checking VQVAE for PixelCNN
 53%|█████▎    | 316/600 [07:30<06:55,  1.46s/it]Checking VQVAE for PixelCNN
 53%|█████▎    | 317/600 [07:32<06:53,  1.46s/it]Checking VQVAE for PixelCNN
 53%|█████▎    | 318/600 [07:33<06:51,  1.46s/it]Checking VQVAE for PixelCNN
 53%|█████▎    | 319/600 [07:35<06:49,  1.46s/it]Checking VQVAE for PixelCNN
 53%|█████▎    | 320/600 [07:36<06:48,  1.46s/it]Checking VQVAE for PixelCNN
 54%|█████▎    | 321/600 [07:38<06:46,  1.46s/it]Checking VQVAE for PixelCNN
 54%|█████▎    | 322/600 [07:39<06:44,  1.46s/it]Checking VQVAE for PixelCNN
 54%|█████▍    | 323/600 [07:41<06:43,  1.46s/it]Checking VQVAE for PixelCNN
 54%|█████▍    | 324/600 [07:42<06:41,  1.46s/it]Checking VQVAE for PixelCNN
 54%|█████▍    | 325/600 [07:44<06:40,  1.45s/it]Checking VQVAE for PixelCNN
 54%|█████▍    | 326/600 [07:45<06:38,  1.45s/it]Checking VQVAE for PixelCNN
 55%|█████▍    | 327/600 [07:46<06:37,  1.45s/it]Checking VQVAE for PixelCNN
 55%|█████▍    | 328/600 [07:48<06:35,  1.46s/it]Checking VQVAE for PixelCNN
 55%|█████▍    | 329/600 [07:49<06:44,  1.49s/it]Checking VQVAE for PixelCNN
 55%|█████▌    | 330/600 [07:51<06:38,  1.48s/it]Checking VQVAE for PixelCNN
 55%|█████▌    | 331/600 [07:52<06:34,  1.47s/it]Checking VQVAE for PixelCNN
 55%|█████▌    | 332/600 [07:54<06:34,  1.47s/it]Checking VQVAE for PixelCNN
 56%|█████▌    | 333/600 [07:55<06:30,  1.46s/it]Checking VQVAE for PixelCNN
 56%|█████▌    | 334/600 [07:57<06:27,  1.45s/it]Checking VQVAE for PixelCNN
 56%|█████▌    | 335/600 [07:58<06:23,  1.45s/it]Checking VQVAE for PixelCNN
 56%|█████▌    | 336/600 [08:00<06:21,  1.45s/it]Checking VQVAE for PixelCNN
 56%|█████▌    | 337/600 [08:01<06:19,  1.44s/it]Checking VQVAE for PixelCNN
 56%|█████▋    | 338/600 [08:02<06:18,  1.44s/it]Checking VQVAE for PixelCNN
 56%|█████▋    | 339/600 [08:04<06:18,  1.45s/it]Checking VQVAE for PixelCNN
 57%|█████▋    | 340/600 [08:05<06:24,  1.48s/it]Checking VQVAE for PixelCNN
 57%|█████▋    | 341/600 [08:07<06:21,  1.47s/it]Checking VQVAE for PixelCNN
 57%|█████▋    | 342/600 [08:08<06:17,  1.46s/it]Checking VQVAE for PixelCNN
 57%|█████▋    | 343/600 [08:10<06:15,  1.46s/it]Checking VQVAE for PixelCNN
 57%|█████▋    | 344/600 [08:11<06:13,  1.46s/it]Checking VQVAE for PixelCNN
 57%|█████▊    | 345/600 [08:13<06:12,  1.46s/it]Checking VQVAE for PixelCNN
 58%|█████▊    | 346/600 [08:14<06:10,  1.46s/it]Checking VQVAE for PixelCNN
 58%|█████▊    | 347/600 [08:16<06:11,  1.47s/it]Checking VQVAE for PixelCNN
 58%|█████▊    | 348/600 [08:17<06:09,  1.46s/it]Checking VQVAE for PixelCNN
 58%|█████▊    | 349/600 [08:19<06:07,  1.46s/it]Checking VQVAE for PixelCNN
 58%|█████▊    | 350/600 [08:20<06:05,  1.46s/it]Checking VQVAE for PixelCNN
 58%|█████▊    | 351/600 [08:22<06:03,  1.46s/it]Checking VQVAE for PixelCNN
 59%|█████▊    | 352/600 [08:23<06:05,  1.47s/it]Checking VQVAE for PixelCNN
 59%|█████▉    | 353/600 [08:24<06:03,  1.47s/it]Checking VQVAE for PixelCNN
 59%|█████▉    | 354/600 [08:26<06:01,  1.47s/it]Checking VQVAE for PixelCNN
 59%|█████▉    | 355/600 [08:27<05:58,  1.46s/it]Checking VQVAE for PixelCNN
 59%|█████▉    | 356/600 [08:29<05:55,  1.46s/it]Checking VQVAE for PixelCNN
 60%|█████▉    | 357/600 [08:30<05:52,  1.45s/it]Checking VQVAE for PixelCNN
 60%|█████▉    | 358/600 [08:32<05:50,  1.45s/it]Checking VQVAE for PixelCNN
 60%|█████▉    | 359/600 [08:33<05:48,  1.45s/it]Checking VQVAE for PixelCNN
 60%|██████    | 360/600 [08:35<05:46,  1.44s/it]Checking VQVAE for PixelCNN
 60%|██████    | 361/600 [08:36<05:55,  1.49s/it]Checking VQVAE for PixelCNN
 60%|██████    | 362/600 [08:38<05:50,  1.47s/it]Checking VQVAE for PixelCNN
 60%|██████    | 363/600 [08:39<05:46,  1.46s/it]Checking VQVAE for PixelCNN
 61%|██████    | 364/600 [08:41<05:43,  1.46s/it]Checking VQVAE for PixelCNN
 61%|██████    | 365/600 [08:42<05:41,  1.45s/it]Checking VQVAE for PixelCNN
 61%|██████    | 366/600 [08:43<05:39,  1.45s/it]Checking VQVAE for PixelCNN
 61%|██████    | 367/600 [08:45<05:37,  1.45s/it]Checking VQVAE for PixelCNN
 61%|██████▏   | 368/600 [08:46<05:35,  1.45s/it]Checking VQVAE for PixelCNN
 62%|██████▏   | 369/600 [08:48<05:33,  1.44s/it]Checking VQVAE for PixelCNN
 62%|██████▏   | 370/600 [08:49<05:31,  1.44s/it]Checking VQVAE for PixelCNN
 62%|██████▏   | 371/600 [08:51<05:30,  1.44s/it]Checking VQVAE for PixelCNN
 62%|██████▏   | 372/600 [08:52<05:28,  1.44s/it]Checking VQVAE for PixelCNN
 62%|██████▏   | 373/600 [08:54<05:27,  1.44s/it]Checking VQVAE for PixelCNN
 62%|██████▏   | 374/600 [08:55<05:28,  1.45s/it]Checking VQVAE for PixelCNN
 62%|██████▎   | 375/600 [08:56<05:26,  1.45s/it]Checking VQVAE for PixelCNN
 63%|██████▎   | 376/600 [08:58<05:29,  1.47s/it]Checking VQVAE for PixelCNN
 63%|██████▎   | 377/600 [09:00<05:38,  1.52s/it]Checking VQVAE for PixelCNN
 63%|██████▎   | 378/600 [09:01<05:32,  1.50s/it]Checking VQVAE for PixelCNN
 63%|██████▎   | 379/600 [09:02<05:28,  1.49s/it]Checking VQVAE for PixelCNN
 63%|██████▎   | 380/600 [09:04<05:24,  1.48s/it]Checking VQVAE for PixelCNN
 64%|██████▎   | 381/600 [09:05<05:21,  1.47s/it]Checking VQVAE for PixelCNN
 64%|██████▎   | 382/600 [09:07<05:19,  1.46s/it]Checking VQVAE for PixelCNN
 64%|██████▍   | 383/600 [09:08<05:17,  1.46s/it]Checking VQVAE for PixelCNN
 64%|██████▍   | 384/600 [09:10<05:14,  1.46s/it]Checking VQVAE for PixelCNN
 64%|██████▍   | 385/600 [09:11<05:13,  1.46s/it]Checking VQVAE for PixelCNN
 64%|██████▍   | 386/600 [09:13<05:11,  1.46s/it]Checking VQVAE for PixelCNN
 64%|██████▍   | 387/600 [09:14<05:09,  1.46s/it]Checking VQVAE for PixelCNN
 65%|██████▍   | 388/600 [09:16<05:08,  1.45s/it]Checking VQVAE for PixelCNN
 65%|██████▍   | 389/600 [09:17<05:06,  1.45s/it]Checking VQVAE for PixelCNN
 65%|██████▌   | 390/600 [09:18<05:05,  1.46s/it]Checking VQVAE for PixelCNN
 65%|██████▌   | 391/600 [09:20<05:03,  1.45s/it]Checking VQVAE for PixelCNN
 65%|██████▌   | 392/600 [09:21<05:02,  1.46s/it]Checking VQVAE for PixelCNN
 66%|██████▌   | 393/600 [09:23<05:01,  1.46s/it]Checking VQVAE for PixelCNN
 66%|██████▌   | 394/600 [09:24<04:59,  1.46s/it]Checking VQVAE for PixelCNN
 66%|██████▌   | 395/600 [09:26<04:58,  1.46s/it]Checking VQVAE for PixelCNN
 66%|██████▌   | 396/600 [09:27<04:56,  1.45s/it]Checking VQVAE for PixelCNN
 66%|██████▌   | 397/600 [09:29<04:55,  1.46s/it]Checking VQVAE for PixelCNN
 66%|██████▋   | 398/600 [09:30<04:54,  1.46s/it]Checking VQVAE for PixelCNN
 66%|██████▋   | 399/600 [09:32<04:53,  1.46s/it]Checking VQVAE for PixelCNN
 67%|██████▋   | 400/600 [09:33<04:52,  1.46s/it]Checking VQVAE for PixelCNN
 67%|██████▋   | 401/600 [09:35<04:51,  1.46s/it]Checking VQVAE for PixelCNN
 67%|██████▋   | 402/600 [09:36<04:50,  1.47s/it]Checking VQVAE for PixelCNN
 67%|██████▋   | 403/600 [09:37<04:48,  1.47s/it]Checking VQVAE for PixelCNN
 67%|██████▋   | 404/600 [09:39<04:47,  1.47s/it]Checking VQVAE for PixelCNN
 68%|██████▊   | 405/600 [09:40<04:46,  1.47s/it]Checking VQVAE for PixelCNN
 68%|██████▊   | 406/600 [09:42<04:44,  1.47s/it]Checking VQVAE for PixelCNN
 68%|██████▊   | 407/600 [09:43<04:43,  1.47s/it]Checking VQVAE for PixelCNN
 68%|██████▊   | 408/600 [09:45<04:41,  1.47s/it]Checking VQVAE for PixelCNN
 68%|██████▊   | 409/600 [09:46<04:40,  1.47s/it]Checking VQVAE for PixelCNN
 68%|██████▊   | 410/600 [09:48<04:38,  1.46s/it]Checking VQVAE for PixelCNN
 68%|██████▊   | 411/600 [09:49<04:36,  1.47s/it]Checking VQVAE for PixelCNN
 69%|██████▊   | 412/600 [09:51<04:35,  1.47s/it]Checking VQVAE for PixelCNN
 69%|██████▉   | 413/600 [09:52<04:34,  1.47s/it]Checking VQVAE for PixelCNN
 69%|██████▉   | 414/600 [09:54<04:32,  1.47s/it]Checking VQVAE for PixelCNN
 69%|██████▉   | 415/600 [09:55<04:31,  1.47s/it]Checking VQVAE for PixelCNN
 69%|██████▉   | 416/600 [09:57<04:30,  1.47s/it]Checking VQVAE for PixelCNN
 70%|██████▉   | 417/600 [09:58<04:28,  1.47s/it]Checking VQVAE for PixelCNN
 70%|██████▉   | 418/600 [09:59<04:26,  1.47s/it]Checking VQVAE for PixelCNN
 70%|██████▉   | 419/600 [10:01<04:25,  1.47s/it]Checking VQVAE for PixelCNN
 70%|███████   | 420/600 [10:02<04:23,  1.47s/it]Checking VQVAE for PixelCNN
 70%|███████   | 421/600 [10:04<04:22,  1.47s/it]Checking VQVAE for PixelCNN
 70%|███████   | 422/600 [10:05<04:21,  1.47s/it]Checking VQVAE for PixelCNN
 70%|███████   | 423/600 [10:07<04:19,  1.47s/it]Checking VQVAE for PixelCNN
 71%|███████   | 424/600 [10:08<04:20,  1.48s/it]Checking VQVAE for PixelCNN
 71%|███████   | 425/600 [10:10<04:24,  1.51s/it]Checking VQVAE for PixelCNN
 71%|███████   | 426/600 [10:11<04:20,  1.50s/it]Checking VQVAE for PixelCNN
 71%|███████   | 427/600 [10:13<04:16,  1.48s/it]Checking VQVAE for PixelCNN
 71%|███████▏  | 428/600 [10:14<04:13,  1.47s/it]Checking VQVAE for PixelCNN
 72%|███████▏  | 429/600 [10:16<04:10,  1.47s/it]Checking VQVAE for PixelCNN
 72%|███████▏  | 430/600 [10:17<04:12,  1.49s/it]Checking VQVAE for PixelCNN
 72%|███████▏  | 431/600 [10:19<04:09,  1.48s/it]Checking VQVAE for PixelCNN
 72%|███████▏  | 432/600 [10:20<04:06,  1.47s/it]Checking VQVAE for PixelCNN
 72%|███████▏  | 433/600 [10:22<04:07,  1.48s/it]Checking VQVAE for PixelCNN
 72%|███████▏  | 434/600 [10:23<04:04,  1.47s/it]Checking VQVAE for PixelCNN
 72%|███████▎  | 435/600 [10:25<04:02,  1.47s/it]Checking VQVAE for PixelCNN
 73%|███████▎  | 436/600 [10:26<04:00,  1.46s/it]Checking VQVAE for PixelCNN
 73%|███████▎  | 437/600 [10:27<03:58,  1.46s/it]Checking VQVAE for PixelCNN
 73%|███████▎  | 438/600 [10:29<03:56,  1.46s/it]Checking VQVAE for PixelCNN
 73%|███████▎  | 439/600 [10:30<03:54,  1.46s/it]Checking VQVAE for PixelCNN
 73%|███████▎  | 440/600 [10:32<03:53,  1.46s/it]Checking VQVAE for PixelCNN
 74%|███████▎  | 441/600 [10:33<03:51,  1.46s/it]Checking VQVAE for PixelCNN
 74%|███████▎  | 442/600 [10:35<03:50,  1.46s/it]Checking VQVAE for PixelCNN
 74%|███████▍  | 443/600 [10:36<03:48,  1.46s/it]Checking VQVAE for PixelCNN
 74%|███████▍  | 444/600 [10:38<03:47,  1.46s/it]Checking VQVAE for PixelCNN
 74%|███████▍  | 445/600 [10:39<03:46,  1.46s/it]Checking VQVAE for PixelCNN
 74%|███████▍  | 446/600 [10:41<03:44,  1.46s/it]Checking VQVAE for PixelCNN
 74%|███████▍  | 447/600 [10:42<03:43,  1.46s/it]Checking VQVAE for PixelCNN
 75%|███████▍  | 448/600 [10:44<03:41,  1.46s/it]Checking VQVAE for PixelCNN
 75%|███████▍  | 449/600 [10:45<03:40,  1.46s/it]Checking VQVAE for PixelCNN
 75%|███████▌  | 450/600 [10:46<03:38,  1.46s/it]Checking VQVAE for PixelCNN
 75%|███████▌  | 451/600 [10:48<03:37,  1.46s/it]Checking VQVAE for PixelCNN
 75%|███████▌  | 452/600 [10:49<03:35,  1.46s/it]Checking VQVAE for PixelCNN
 76%|███████▌  | 453/600 [10:51<03:34,  1.46s/it]Checking VQVAE for PixelCNN
 76%|███████▌  | 454/600 [10:52<03:32,  1.46s/it]Checking VQVAE for PixelCNN
 76%|███████▌  | 455/600 [10:54<03:31,  1.46s/it]Checking VQVAE for PixelCNN
 76%|███████▌  | 456/600 [10:55<03:30,  1.46s/it]Checking VQVAE for PixelCNN
 76%|███████▌  | 457/600 [10:57<03:28,  1.46s/it]Checking VQVAE for PixelCNN
 76%|███████▋  | 458/600 [10:58<03:26,  1.46s/it]Checking VQVAE for PixelCNN
 76%|███████▋  | 459/600 [11:00<03:24,  1.45s/it]Checking VQVAE for PixelCNN
 77%|███████▋  | 460/600 [11:01<03:23,  1.45s/it]Checking VQVAE for PixelCNN
 77%|███████▋  | 461/600 [11:02<03:21,  1.45s/it]Checking VQVAE for PixelCNN
 77%|███████▋  | 462/600 [11:04<03:20,  1.45s/it]Checking VQVAE for PixelCNN
 77%|███████▋  | 463/600 [11:05<03:18,  1.45s/it]Checking VQVAE for PixelCNN
 77%|███████▋  | 464/600 [11:07<03:17,  1.45s/it]Checking VQVAE for PixelCNN
 78%|███████▊  | 465/600 [11:08<03:15,  1.45s/it]Checking VQVAE for PixelCNN
 78%|███████▊  | 466/600 [11:10<03:14,  1.45s/it]Checking VQVAE for PixelCNN
 78%|███████▊  | 467/600 [11:11<03:12,  1.45s/it]Checking VQVAE for PixelCNN
 78%|███████▊  | 468/600 [11:13<03:11,  1.45s/it]Checking VQVAE for PixelCNN
 78%|███████▊  | 469/600 [11:14<03:10,  1.45s/it]Checking VQVAE for PixelCNN
 78%|███████▊  | 470/600 [11:15<03:08,  1.45s/it]Checking VQVAE for PixelCNN
 78%|███████▊  | 471/600 [11:17<03:07,  1.45s/it]Checking VQVAE for PixelCNN
 79%|███████▊  | 472/600 [11:18<03:06,  1.46s/it]Checking VQVAE for PixelCNN
 79%|███████▉  | 473/600 [11:20<03:04,  1.46s/it]Checking VQVAE for PixelCNN
 79%|███████▉  | 474/600 [11:21<03:04,  1.47s/it]Checking VQVAE for PixelCNN
 79%|███████▉  | 475/600 [11:23<03:02,  1.46s/it]Checking VQVAE for PixelCNN
 79%|███████▉  | 476/600 [11:24<03:01,  1.46s/it]Checking VQVAE for PixelCNN
 80%|███████▉  | 477/600 [11:26<02:59,  1.46s/it]Checking VQVAE for PixelCNN
 80%|███████▉  | 478/600 [11:27<02:58,  1.46s/it]Checking VQVAE for PixelCNN
 80%|███████▉  | 479/600 [11:29<02:56,  1.46s/it]Checking VQVAE for PixelCNN
 80%|████████  | 480/600 [11:30<02:54,  1.46s/it]Checking VQVAE for PixelCNN
 80%|████████  | 481/600 [11:32<02:53,  1.46s/it]Checking VQVAE for PixelCNN
 80%|████████  | 482/600 [11:33<02:51,  1.46s/it]Checking VQVAE for PixelCNN
 80%|████████  | 483/600 [11:34<02:50,  1.46s/it]Checking VQVAE for PixelCNN
 81%|████████  | 484/600 [11:36<02:48,  1.45s/it]Checking VQVAE for PixelCNN
 81%|████████  | 485/600 [11:37<02:47,  1.45s/it]Checking VQVAE for PixelCNN
 81%|████████  | 486/600 [11:39<02:45,  1.45s/it]Checking VQVAE for PixelCNN
 81%|████████  | 487/600 [11:40<02:44,  1.45s/it]Checking VQVAE for PixelCNN
 81%|████████▏ | 488/600 [11:42<02:42,  1.45s/it]Checking VQVAE for PixelCNN
 82%|████████▏ | 489/600 [11:43<02:41,  1.45s/it]Checking VQVAE for PixelCNN
 82%|████████▏ | 490/600 [11:45<02:39,  1.45s/it]Checking VQVAE for PixelCNN
 82%|████████▏ | 491/600 [11:46<02:38,  1.45s/it]Checking VQVAE for PixelCNN
 82%|████████▏ | 492/600 [11:48<02:36,  1.45s/it]Checking VQVAE for PixelCNN
 82%|████████▏ | 493/600 [11:49<02:35,  1.45s/it]Checking VQVAE for PixelCNN
 82%|████████▏ | 494/600 [11:50<02:33,  1.45s/it]Checking VQVAE for PixelCNN
 82%|████████▎ | 495/600 [11:52<02:32,  1.45s/it]Checking VQVAE for PixelCNN
 83%|████████▎ | 496/600 [11:53<02:35,  1.50s/it]Checking VQVAE for PixelCNN
 83%|████████▎ | 497/600 [11:55<02:32,  1.48s/it]Checking VQVAE for PixelCNN
 83%|████████▎ | 498/600 [11:56<02:30,  1.47s/it]Checking VQVAE for PixelCNN
 83%|████████▎ | 499/600 [11:58<02:27,  1.46s/it]Checking VQVAE for PixelCNN
 83%|████████▎ | 500/600 [11:59<02:26,  1.46s/it]Checking VQVAE for PixelCNN
 84%|████████▎ | 501/600 [12:01<02:24,  1.46s/it]Checking VQVAE for PixelCNN
 84%|████████▎ | 502/600 [12:02<02:22,  1.46s/it]Checking VQVAE for PixelCNN
 84%|████████▍ | 503/600 [12:04<02:21,  1.45s/it]Checking VQVAE for PixelCNN
 84%|████████▍ | 504/600 [12:05<02:19,  1.45s/it]Checking VQVAE for PixelCNN
 84%|████████▍ | 505/600 [12:07<02:17,  1.45s/it]Checking VQVAE for PixelCNN
 84%|████████▍ | 506/600 [12:08<02:16,  1.45s/it]Checking VQVAE for PixelCNN
 84%|████████▍ | 507/600 [12:09<02:14,  1.45s/it]Checking VQVAE for PixelCNN
 85%|████████▍ | 508/600 [12:11<02:13,  1.45s/it]Checking VQVAE for PixelCNN
 85%|████████▍ | 509/600 [12:12<02:11,  1.45s/it]Checking VQVAE for PixelCNN
 85%|████████▌ | 510/600 [12:14<02:10,  1.45s/it]Checking VQVAE for PixelCNN
 85%|████████▌ | 511/600 [12:15<02:09,  1.45s/it]Checking VQVAE for PixelCNN
 85%|████████▌ | 512/600 [12:17<02:07,  1.45s/it]Checking VQVAE for PixelCNN
 86%|████████▌ | 513/600 [12:18<02:06,  1.45s/it]Checking VQVAE for PixelCNN
 86%|████████▌ | 514/600 [12:20<02:04,  1.45s/it]Checking VQVAE for PixelCNN
 86%|████████▌ | 515/600 [12:21<02:03,  1.45s/it]Checking VQVAE for PixelCNN
 86%|████████▌ | 516/600 [12:22<02:02,  1.45s/it]Checking VQVAE for PixelCNN
 86%|████████▌ | 517/600 [12:24<02:00,  1.45s/it]Checking VQVAE for PixelCNN
 86%|████████▋ | 518/600 [12:26<02:02,  1.50s/it]Checking VQVAE for PixelCNN
 86%|████████▋ | 519/600 [12:27<01:59,  1.48s/it]Checking VQVAE for PixelCNN
 87%|████████▋ | 520/600 [12:28<01:57,  1.47s/it]Checking VQVAE for PixelCNN
 87%|████████▋ | 521/600 [12:30<01:55,  1.46s/it]Checking VQVAE for PixelCNN
 87%|████████▋ | 522/600 [12:31<01:53,  1.46s/it]Checking VQVAE for PixelCNN
 87%|████████▋ | 523/600 [12:33<01:54,  1.48s/it]Checking VQVAE for PixelCNN
 87%|████████▋ | 524/600 [12:34<01:52,  1.47s/it]Checking VQVAE for PixelCNN
 88%|████████▊ | 525/600 [12:36<01:50,  1.47s/it]Checking VQVAE for PixelCNN
 88%|████████▊ | 526/600 [12:37<01:48,  1.47s/it]Checking VQVAE for PixelCNN
 88%|████████▊ | 527/600 [12:39<01:46,  1.46s/it]Checking VQVAE for PixelCNN
 88%|████████▊ | 528/600 [12:40<01:45,  1.46s/it]Checking VQVAE for PixelCNN
 88%|████████▊ | 529/600 [12:42<01:43,  1.46s/it]Checking VQVAE for PixelCNN
 88%|████████▊ | 530/600 [12:43<01:42,  1.46s/it]Checking VQVAE for PixelCNN
 88%|████████▊ | 531/600 [12:45<01:41,  1.47s/it]Checking VQVAE for PixelCNN
 89%|████████▊ | 532/600 [12:46<01:43,  1.52s/it]Checking VQVAE for PixelCNN
 89%|████████▉ | 533/600 [12:48<01:40,  1.50s/it]Checking VQVAE for PixelCNN
 89%|████████▉ | 534/600 [12:49<01:38,  1.49s/it]Checking VQVAE for PixelCNN
 89%|████████▉ | 535/600 [12:51<01:35,  1.48s/it]Checking VQVAE for PixelCNN
 89%|████████▉ | 536/600 [12:52<01:33,  1.47s/it]Checking VQVAE for PixelCNN
 90%|████████▉ | 537/600 [12:53<01:32,  1.46s/it]Checking VQVAE for PixelCNN
 90%|████████▉ | 538/600 [12:55<01:30,  1.46s/it]Checking VQVAE for PixelCNN
 90%|████████▉ | 539/600 [12:56<01:28,  1.45s/it]Checking VQVAE for PixelCNN
 90%|█████████ | 540/600 [12:58<01:27,  1.46s/it]Checking VQVAE for PixelCNN
 90%|█████████ | 541/600 [12:59<01:25,  1.45s/it]Checking VQVAE for PixelCNN
 90%|█████████ | 542/600 [13:01<01:24,  1.45s/it]Checking VQVAE for PixelCNN
 90%|█████████ | 543/600 [13:02<01:22,  1.45s/it]Checking VQVAE for PixelCNN
 91%|█████████ | 544/600 [13:04<01:21,  1.45s/it]Checking VQVAE for PixelCNN
 91%|█████████ | 545/600 [13:05<01:22,  1.50s/it]Checking VQVAE for PixelCNN
 91%|█████████ | 546/600 [13:07<01:21,  1.51s/it]Checking VQVAE for PixelCNN
 91%|█████████ | 547/600 [13:08<01:19,  1.50s/it]Checking VQVAE for PixelCNN
 91%|█████████▏| 548/600 [13:10<01:17,  1.50s/it]Checking VQVAE for PixelCNN
 92%|█████████▏| 549/600 [13:11<01:16,  1.49s/it]Checking VQVAE for PixelCNN
 92%|█████████▏| 550/600 [13:13<01:14,  1.49s/it]Checking VQVAE for PixelCNN
 92%|█████████▏| 551/600 [13:14<01:13,  1.49s/it]Checking VQVAE for PixelCNN
 92%|█████████▏| 552/600 [13:16<01:12,  1.52s/it]Checking VQVAE for PixelCNN
 92%|█████████▏| 553/600 [13:17<01:10,  1.51s/it]Checking VQVAE for PixelCNN
 92%|█████████▏| 554/600 [13:19<01:09,  1.50s/it]Checking VQVAE for PixelCNN
 92%|█████████▎| 555/600 [13:20<01:07,  1.49s/it]Checking VQVAE for PixelCNN
 93%|█████████▎| 556/600 [13:22<01:05,  1.49s/it]Checking VQVAE for PixelCNN
 93%|█████████▎| 557/600 [13:23<01:04,  1.49s/it]Checking VQVAE for PixelCNN
 93%|█████████▎| 558/600 [13:25<01:02,  1.49s/it]Checking VQVAE for PixelCNN
 93%|█████████▎| 559/600 [13:26<01:00,  1.49s/it]Checking VQVAE for PixelCNN
 93%|█████████▎| 560/600 [13:28<01:00,  1.51s/it]Checking VQVAE for PixelCNN
 94%|█████████▎| 561/600 [13:29<00:58,  1.50s/it]Checking VQVAE for PixelCNN
 94%|█████████▎| 562/600 [13:31<00:56,  1.49s/it]Checking VQVAE for PixelCNN
 94%|█████████▍| 563/600 [13:32<00:54,  1.48s/it]Checking VQVAE for PixelCNN
 94%|█████████▍| 564/600 [13:34<00:53,  1.48s/it]Checking VQVAE for PixelCNN
 94%|█████████▍| 565/600 [13:35<00:52,  1.49s/it]Checking VQVAE for PixelCNN
 94%|█████████▍| 566/600 [13:37<00:50,  1.48s/it]Checking VQVAE for PixelCNN
 94%|█████████▍| 567/600 [13:38<00:48,  1.48s/it]Checking VQVAE for PixelCNN
 95%|█████████▍| 568/600 [13:39<00:47,  1.47s/it]Checking VQVAE for PixelCNN
 95%|█████████▍| 569/600 [13:41<00:45,  1.47s/it]Checking VQVAE for PixelCNN
 95%|█████████▌| 570/600 [13:42<00:44,  1.47s/it]Checking VQVAE for PixelCNN
 95%|█████████▌| 571/600 [13:44<00:42,  1.46s/it]Checking VQVAE for PixelCNN
 95%|█████████▌| 572/600 [13:45<00:40,  1.46s/it]Checking VQVAE for PixelCNN
 96%|█████████▌| 573/600 [13:47<00:39,  1.46s/it]Checking VQVAE for PixelCNN
 96%|█████████▌| 574/600 [13:48<00:38,  1.46s/it]Checking VQVAE for PixelCNN
 96%|█████████▌| 575/600 [13:50<00:36,  1.46s/it]Checking VQVAE for PixelCNN
 96%|█████████▌| 576/600 [13:51<00:35,  1.46s/it]Checking VQVAE for PixelCNN
 96%|█████████▌| 577/600 [13:53<00:33,  1.47s/it]Checking VQVAE for PixelCNN
 96%|█████████▋| 578/600 [13:54<00:33,  1.50s/it]Checking VQVAE for PixelCNN
 96%|█████████▋| 579/600 [13:56<00:31,  1.49s/it]Checking VQVAE for PixelCNN
 97%|█████████▋| 580/600 [13:57<00:29,  1.49s/it]Checking VQVAE for PixelCNN
 97%|█████████▋| 581/600 [13:59<00:28,  1.48s/it]Checking VQVAE for PixelCNN
 97%|█████████▋| 582/600 [14:00<00:26,  1.47s/it]Checking VQVAE for PixelCNN
 97%|█████████▋| 583/600 [14:02<00:24,  1.47s/it]Checking VQVAE for PixelCNN
 97%|█████████▋| 584/600 [14:03<00:23,  1.47s/it]Checking VQVAE for PixelCNN
 98%|█████████▊| 585/600 [14:04<00:22,  1.47s/it]Checking VQVAE for PixelCNN
 98%|█████████▊| 586/600 [14:06<00:20,  1.47s/it]Checking VQVAE for PixelCNN
 98%|█████████▊| 587/600 [14:07<00:19,  1.46s/it]Checking VQVAE for PixelCNN
 98%|█████████▊| 588/600 [14:09<00:17,  1.46s/it]Checking VQVAE for PixelCNN
 98%|█████████▊| 589/600 [14:10<00:16,  1.46s/it]Checking VQVAE for PixelCNN
 98%|█████████▊| 590/600 [14:12<00:14,  1.46s/it]Checking VQVAE for PixelCNN
 98%|█████████▊| 591/600 [14:13<00:13,  1.46s/it]Checking VQVAE for PixelCNN
 99%|█████████▊| 592/600 [14:15<00:11,  1.46s/it]Checking VQVAE for PixelCNN
 99%|█████████▉| 593/600 [14:16<00:10,  1.46s/it]Checking VQVAE for PixelCNN
 99%|█████████▉| 594/600 [14:18<00:08,  1.46s/it]Checking VQVAE for PixelCNN
 99%|█████████▉| 595/600 [14:19<00:07,  1.46s/it]Checking VQVAE for PixelCNN
 99%|█████████▉| 596/600 [14:21<00:05,  1.46s/it]Checking VQVAE for PixelCNN
100%|█████████▉| 597/600 [14:22<00:04,  1.46s/it]Checking VQVAE for PixelCNN
100%|█████████▉| 598/600 [14:23<00:02,  1.46s/it]Checking VQVAE for PixelCNN
100%|█████████▉| 599/600 [14:25<00:01,  1.46s/it]Checking VQVAE for PixelCNN
100%|██████████| 600/600 [14:26<00:00,  1.44s/it]
Latent Space = 600 275 1024(32*32) (600, 275, 1024)
train data done (600, 275, 1024)
filename /media/jang/jang/0ubuntu/image_dataset/Running_test/128_600_Single/128_600_Training_Active_Images.npy
PATH /media/jang/jang/0ubuntu/image_dataset/Running_test/128_600_Single/128_600_Training_Active_Images.npy
  0%|          | 0/600 [00:00<?, ?it/s]loaded /media/jang/jang/0ubuntu/image_dataset/Running_test/128_600_Single/128_600_Training_Active_Images.npy
n = episode number 600
FORMAT = 600 275 49152(128*128*3) (600, 275, 49152)
Using initial images from observations in episodes
Checking VQVAE for PixelCNN
  0%|          | 1/600 [00:01<14:59,  1.50s/it]Checking VQVAE for PixelCNN
  0%|          | 2/600 [00:02<13:53,  1.39s/it]Checking VQVAE for PixelCNN
  0%|          | 3/600 [00:04<13:31,  1.36s/it]Checking VQVAE for PixelCNN
  1%|          | 4/600 [00:05<13:20,  1.34s/it]Checking VQVAE for PixelCNN
  1%|          | 5/600 [00:06<13:13,  1.33s/it]Checking VQVAE for PixelCNN
  1%|          | 6/600 [00:08<13:09,  1.33s/it]Checking VQVAE for PixelCNN
  1%|          | 7/600 [00:09<13:06,  1.33s/it]Checking VQVAE for PixelCNN
  1%|▏         | 8/600 [00:10<13:03,  1.32s/it]Checking VQVAE for PixelCNN
  2%|▏         | 9/600 [00:12<13:01,  1.32s/it]Checking VQVAE for PixelCNN
  2%|▏         | 10/600 [00:13<12:59,  1.32s/it]Checking VQVAE for PixelCNN
  2%|▏         | 11/600 [00:14<13:21,  1.36s/it]Checking VQVAE for PixelCNN
  2%|▏         | 12/600 [00:16<13:17,  1.36s/it]Checking VQVAE for PixelCNN
  2%|▏         | 13/600 [00:17<13:12,  1.35s/it]Checking VQVAE for PixelCNN
  2%|▏         | 14/600 [00:18<13:09,  1.35s/it]Checking VQVAE for PixelCNN
  2%|▎         | 15/600 [00:20<13:06,  1.34s/it]Checking VQVAE for PixelCNN
  3%|▎         | 16/600 [00:21<13:09,  1.35s/it]Checking VQVAE for PixelCNN
  3%|▎         | 17/600 [00:22<13:21,  1.38s/it]Checking VQVAE for PixelCNN
  3%|▎         | 18/600 [00:24<13:17,  1.37s/it]Checking VQVAE for PixelCNN
  3%|▎         | 19/600 [00:25<13:11,  1.36s/it]Checking VQVAE for PixelCNN
  3%|▎         | 20/600 [00:27<13:08,  1.36s/it]Checking VQVAE for PixelCNN
  4%|▎         | 21/600 [00:28<13:09,  1.36s/it]Checking VQVAE for PixelCNN
  4%|▎         | 22/600 [00:29<13:07,  1.36s/it]Checking VQVAE for PixelCNN
  4%|▍         | 23/600 [00:31<13:01,  1.35s/it]Checking VQVAE for PixelCNN
  4%|▍         | 24/600 [00:32<13:00,  1.35s/it]Checking VQVAE for PixelCNN
  4%|▍         | 25/600 [00:33<12:56,  1.35s/it]Checking VQVAE for PixelCNN
  4%|▍         | 26/600 [00:35<12:56,  1.35s/it]Checking VQVAE for PixelCNN
  4%|▍         | 27/600 [00:36<12:53,  1.35s/it]Checking VQVAE for PixelCNN
  5%|▍         | 28/600 [00:37<12:55,  1.36s/it]Checking VQVAE for PixelCNN
  5%|▍         | 29/600 [00:39<12:51,  1.35s/it]Checking VQVAE for PixelCNN
  5%|▌         | 30/600 [00:40<12:50,  1.35s/it]Checking VQVAE for PixelCNN
  5%|▌         | 31/600 [00:41<12:46,  1.35s/it]Checking VQVAE for PixelCNN
  5%|▌         | 32/600 [00:43<12:46,  1.35s/it]Checking VQVAE for PixelCNN
  6%|▌         | 33/600 [00:44<12:45,  1.35s/it]Checking VQVAE for PixelCNN
  6%|▌         | 34/600 [00:45<12:44,  1.35s/it]Checking VQVAE for PixelCNN
  6%|▌         | 35/600 [00:47<12:45,  1.35s/it]Checking VQVAE for PixelCNN
  6%|▌         | 36/600 [00:48<12:41,  1.35s/it]Checking VQVAE for PixelCNN
  6%|▌         | 37/600 [00:50<12:39,  1.35s/it]Checking VQVAE for PixelCNN
  6%|▋         | 38/600 [00:51<12:39,  1.35s/it]Checking VQVAE for PixelCNN
  6%|▋         | 39/600 [00:52<12:37,  1.35s/it]Checking VQVAE for PixelCNN
  7%|▋         | 40/600 [00:54<12:37,  1.35s/it]Checking VQVAE for PixelCNN
  7%|▋         | 41/600 [00:55<12:37,  1.35s/it]Checking VQVAE for PixelCNN
  7%|▋         | 42/600 [00:56<12:38,  1.36s/it]Checking VQVAE for PixelCNN
  7%|▋         | 43/600 [00:58<12:34,  1.35s/it]Checking VQVAE for PixelCNN
  7%|▋         | 44/600 [00:59<12:32,  1.35s/it]Checking VQVAE for PixelCNN
  8%|▊         | 45/600 [01:00<12:29,  1.35s/it]Checking VQVAE for PixelCNN
  8%|▊         | 46/600 [01:02<12:26,  1.35s/it]Checking VQVAE for PixelCNN
  8%|▊         | 47/600 [01:03<12:31,  1.36s/it]Checking VQVAE for PixelCNN
  8%|▊         | 48/600 [01:04<12:29,  1.36s/it]Checking VQVAE for PixelCNN
  8%|▊         | 49/600 [01:06<12:25,  1.35s/it]Checking VQVAE for PixelCNN
  8%|▊         | 50/600 [01:07<12:23,  1.35s/it]Checking VQVAE for PixelCNN
  8%|▊         | 51/600 [01:08<12:24,  1.36s/it]Checking VQVAE for PixelCNN
  9%|▊         | 52/600 [01:10<12:20,  1.35s/it]Checking VQVAE for PixelCNN
  9%|▉         | 53/600 [01:11<12:19,  1.35s/it]Checking VQVAE for PixelCNN
  9%|▉         | 54/600 [01:13<12:20,  1.36s/it]Checking VQVAE for PixelCNN
  9%|▉         | 55/600 [01:14<12:18,  1.36s/it]Checking VQVAE for PixelCNN
  9%|▉         | 56/600 [01:15<12:17,  1.36s/it]Checking VQVAE for PixelCNN
 10%|▉         | 57/600 [01:17<12:35,  1.39s/it]Checking VQVAE for PixelCNN
 10%|▉         | 58/600 [01:18<12:54,  1.43s/it]Checking VQVAE for PixelCNN
 10%|▉         | 59/600 [01:20<12:41,  1.41s/it]Checking VQVAE for PixelCNN
 10%|█         | 60/600 [01:21<12:31,  1.39s/it]Checking VQVAE for PixelCNN
 10%|█         | 61/600 [01:22<12:21,  1.38s/it]Checking VQVAE for PixelCNN
 10%|█         | 62/600 [01:24<12:17,  1.37s/it]Checking VQVAE for PixelCNN
 10%|█         | 63/600 [01:25<12:11,  1.36s/it]Checking VQVAE for PixelCNN
 11%|█         | 64/600 [01:26<12:06,  1.36s/it]Checking VQVAE for PixelCNN
 11%|█         | 65/600 [01:28<12:05,  1.36s/it]Checking VQVAE for PixelCNN
 11%|█         | 66/600 [01:29<12:01,  1.35s/it]Checking VQVAE for PixelCNN
 11%|█         | 67/600 [01:30<12:00,  1.35s/it]Checking VQVAE for PixelCNN
 11%|█▏        | 68/600 [01:32<12:02,  1.36s/it]Checking VQVAE for PixelCNN
 12%|█▏        | 69/600 [01:33<12:01,  1.36s/it]Checking VQVAE for PixelCNN
 12%|█▏        | 70/600 [01:34<11:59,  1.36s/it]Checking VQVAE for PixelCNN
 12%|█▏        | 71/600 [01:36<11:57,  1.36s/it]Checking VQVAE for PixelCNN
 12%|█▏        | 72/600 [01:37<11:56,  1.36s/it]Checking VQVAE for PixelCNN
 12%|█▏        | 73/600 [01:39<11:54,  1.36s/it]Checking VQVAE for PixelCNN
 12%|█▏        | 74/600 [01:40<11:54,  1.36s/it]Checking VQVAE for PixelCNN
 12%|█▎        | 75/600 [01:41<11:54,  1.36s/it]Checking VQVAE for PixelCNN
 13%|█▎        | 76/600 [01:43<11:52,  1.36s/it]Checking VQVAE for PixelCNN
 13%|█▎        | 77/600 [01:44<11:50,  1.36s/it]Checking VQVAE for PixelCNN
 13%|█▎        | 78/600 [01:45<11:49,  1.36s/it]Checking VQVAE for PixelCNN
 13%|█▎        | 79/600 [01:47<11:47,  1.36s/it]Checking VQVAE for PixelCNN
 13%|█▎        | 80/600 [01:48<11:45,  1.36s/it]Checking VQVAE for PixelCNN
 14%|█▎        | 81/600 [01:49<11:45,  1.36s/it]Checking VQVAE for PixelCNN
 14%|█▎        | 82/600 [01:51<11:44,  1.36s/it]Checking VQVAE for PixelCNN
 14%|█▍        | 83/600 [01:52<11:42,  1.36s/it]Checking VQVAE for PixelCNN
 14%|█▍        | 84/600 [01:54<11:43,  1.36s/it]Checking VQVAE for PixelCNN
 14%|█▍        | 85/600 [01:55<11:53,  1.38s/it]Checking VQVAE for PixelCNN
 14%|█▍        | 86/600 [01:56<11:46,  1.37s/it]Checking VQVAE for PixelCNN
 14%|█▍        | 87/600 [01:58<11:42,  1.37s/it]Checking VQVAE for PixelCNN
 15%|█▍        | 88/600 [01:59<11:37,  1.36s/it]Checking VQVAE for PixelCNN
 15%|█▍        | 89/600 [02:00<11:34,  1.36s/it]Checking VQVAE for PixelCNN
 15%|█▌        | 90/600 [02:02<11:32,  1.36s/it]Checking VQVAE for PixelCNN
 15%|█▌        | 91/600 [02:03<11:30,  1.36s/it]Checking VQVAE for PixelCNN
 15%|█▌        | 92/600 [02:04<11:28,  1.36s/it]Checking VQVAE for PixelCNN
 16%|█▌        | 93/600 [02:06<11:27,  1.36s/it]Checking VQVAE for PixelCNN
 16%|█▌        | 94/600 [02:07<11:26,  1.36s/it]Checking VQVAE for PixelCNN
 16%|█▌        | 95/600 [02:08<11:26,  1.36s/it]Checking VQVAE for PixelCNN
 16%|█▌        | 96/600 [02:10<11:28,  1.37s/it]Checking VQVAE for PixelCNN
 16%|█▌        | 97/600 [02:11<11:24,  1.36s/it]Checking VQVAE for PixelCNN
 16%|█▋        | 98/600 [02:13<11:22,  1.36s/it]Checking VQVAE for PixelCNN
 16%|█▋        | 99/600 [02:14<11:20,  1.36s/it]Checking VQVAE for PixelCNN
 17%|█▋        | 100/600 [02:15<11:19,  1.36s/it]Checking VQVAE for PixelCNN
 17%|█▋        | 101/600 [02:17<11:16,  1.36s/it]Checking VQVAE for PixelCNN
 17%|█▋        | 102/600 [02:18<11:16,  1.36s/it]Checking VQVAE for PixelCNN
 17%|█▋        | 103/600 [02:19<11:13,  1.36s/it]Checking VQVAE for PixelCNN
 17%|█▋        | 104/600 [02:21<11:12,  1.36s/it]Checking VQVAE for PixelCNN
 18%|█▊        | 105/600 [02:22<11:13,  1.36s/it]Checking VQVAE for PixelCNN
 18%|█▊        | 106/600 [02:23<11:13,  1.36s/it]Checking VQVAE for PixelCNN
 18%|█▊        | 107/600 [02:25<11:17,  1.37s/it]Checking VQVAE for PixelCNN
 18%|█▊        | 108/600 [02:26<11:14,  1.37s/it]Checking VQVAE for PixelCNN
 18%|█▊        | 109/600 [02:28<11:13,  1.37s/it]Checking VQVAE for PixelCNN
 18%|█▊        | 110/600 [02:29<11:11,  1.37s/it]Checking VQVAE for PixelCNN
 18%|█▊        | 111/600 [02:30<11:12,  1.37s/it]Checking VQVAE for PixelCNN
 19%|█▊        | 112/600 [02:32<11:10,  1.37s/it]Checking VQVAE for PixelCNN
 19%|█▉        | 113/600 [02:33<11:08,  1.37s/it]Checking VQVAE for PixelCNN
 19%|█▉        | 114/600 [02:34<11:07,  1.37s/it]Checking VQVAE for PixelCNN
 19%|█▉        | 115/600 [02:36<11:05,  1.37s/it]Checking VQVAE for PixelCNN
 19%|█▉        | 116/600 [02:37<11:03,  1.37s/it]Checking VQVAE for PixelCNN
 20%|█▉        | 117/600 [02:39<11:01,  1.37s/it]Checking VQVAE for PixelCNN
 20%|█▉        | 118/600 [02:40<11:00,  1.37s/it]Checking VQVAE for PixelCNN
 20%|█▉        | 119/600 [02:41<10:57,  1.37s/it]Checking VQVAE for PixelCNN
 20%|██        | 120/600 [02:43<10:55,  1.37s/it]Checking VQVAE for PixelCNN
 20%|██        | 121/600 [02:44<10:54,  1.37s/it]Checking VQVAE for PixelCNN
 20%|██        | 122/600 [02:45<10:52,  1.37s/it]Checking VQVAE for PixelCNN
 20%|██        | 123/600 [02:47<10:50,  1.36s/it]Checking VQVAE for PixelCNN
 21%|██        | 124/600 [02:48<10:50,  1.37s/it]Checking VQVAE for PixelCNN
 21%|██        | 125/600 [02:49<10:47,  1.36s/it]Checking VQVAE for PixelCNN
 21%|██        | 126/600 [02:51<10:45,  1.36s/it]Checking VQVAE for PixelCNN
 21%|██        | 127/600 [02:52<10:45,  1.36s/it]Checking VQVAE for PixelCNN
 21%|██▏       | 128/600 [02:54<10:43,  1.36s/it]Checking VQVAE for PixelCNN
 22%|██▏       | 129/600 [02:55<10:42,  1.36s/it]Checking VQVAE for PixelCNN
 22%|██▏       | 130/600 [02:56<10:41,  1.37s/it]Checking VQVAE for PixelCNN
 22%|██▏       | 131/600 [02:58<10:40,  1.37s/it]Checking VQVAE for PixelCNN
 22%|██▏       | 132/600 [02:59<10:39,  1.37s/it]Checking VQVAE for PixelCNN
 22%|██▏       | 133/600 [03:00<10:38,  1.37s/it]Checking VQVAE for PixelCNN
 22%|██▏       | 134/600 [03:02<10:37,  1.37s/it]Checking VQVAE for PixelCNN
 22%|██▎       | 135/600 [03:03<10:40,  1.38s/it]Checking VQVAE for PixelCNN
 23%|██▎       | 136/600 [03:05<10:41,  1.38s/it]Checking VQVAE for PixelCNN
 23%|██▎       | 137/600 [03:06<10:41,  1.39s/it]Checking VQVAE for PixelCNN
 23%|██▎       | 138/600 [03:07<10:41,  1.39s/it]Checking VQVAE for PixelCNN
 23%|██▎       | 139/600 [03:09<10:40,  1.39s/it]Checking VQVAE for PixelCNN
 23%|██▎       | 140/600 [03:10<10:40,  1.39s/it]Checking VQVAE for PixelCNN
 24%|██▎       | 141/600 [03:12<10:38,  1.39s/it]Checking VQVAE for PixelCNN
 24%|██▎       | 142/600 [03:13<10:37,  1.39s/it]Checking VQVAE for PixelCNN
 24%|██▍       | 143/600 [03:14<10:36,  1.39s/it]Checking VQVAE for PixelCNN
 24%|██▍       | 144/600 [03:16<10:35,  1.39s/it]Checking VQVAE for PixelCNN
 24%|██▍       | 145/600 [03:17<10:34,  1.39s/it]Checking VQVAE for PixelCNN
 24%|██▍       | 146/600 [03:18<10:30,  1.39s/it]Checking VQVAE for PixelCNN
 24%|██▍       | 147/600 [03:20<10:27,  1.39s/it]Checking VQVAE for PixelCNN
 25%|██▍       | 148/600 [03:21<10:24,  1.38s/it]Checking VQVAE for PixelCNN
 25%|██▍       | 149/600 [03:23<10:31,  1.40s/it]Checking VQVAE for PixelCNN
 25%|██▌       | 150/600 [03:24<10:29,  1.40s/it]Checking VQVAE for PixelCNN
 25%|██▌       | 151/600 [03:26<10:32,  1.41s/it]Checking VQVAE for PixelCNN
 25%|██▌       | 152/600 [03:27<10:25,  1.40s/it]Checking VQVAE for PixelCNN
 26%|██▌       | 153/600 [03:28<10:21,  1.39s/it]Checking VQVAE for PixelCNN
 26%|██▌       | 154/600 [03:30<10:16,  1.38s/it]Checking VQVAE for PixelCNN
 26%|██▌       | 155/600 [03:31<10:15,  1.38s/it]Checking VQVAE for PixelCNN
 26%|██▌       | 156/600 [03:33<10:34,  1.43s/it]Checking VQVAE for PixelCNN
 26%|██▌       | 157/600 [03:34<10:27,  1.42s/it]Checking VQVAE for PixelCNN
 26%|██▋       | 158/600 [03:35<10:19,  1.40s/it]Checking VQVAE for PixelCNN
 26%|██▋       | 159/600 [03:37<10:14,  1.39s/it]Checking VQVAE for PixelCNN
 27%|██▋       | 160/600 [03:38<10:09,  1.39s/it]Checking VQVAE for PixelCNN
 27%|██▋       | 161/600 [03:39<10:06,  1.38s/it]Checking VQVAE for PixelCNN
 27%|██▋       | 162/600 [03:41<10:03,  1.38s/it]Checking VQVAE for PixelCNN
 27%|██▋       | 163/600 [03:42<10:01,  1.38s/it]Checking VQVAE for PixelCNN
 27%|██▋       | 164/600 [03:44<09:59,  1.37s/it]Checking VQVAE for PixelCNN
 28%|██▊       | 165/600 [03:45<10:01,  1.38s/it]Checking VQVAE for PixelCNN
 28%|██▊       | 166/600 [03:46<09:59,  1.38s/it]Checking VQVAE for PixelCNN
 28%|██▊       | 167/600 [03:48<09:57,  1.38s/it]Checking VQVAE for PixelCNN
 28%|██▊       | 168/600 [03:49<09:55,  1.38s/it]Checking VQVAE for PixelCNN
 28%|██▊       | 169/600 [03:50<09:53,  1.38s/it]Checking VQVAE for PixelCNN
 28%|██▊       | 170/600 [03:52<09:51,  1.38s/it]Checking VQVAE for PixelCNN
 28%|██▊       | 171/600 [03:53<09:51,  1.38s/it]Checking VQVAE for PixelCNN
 29%|██▊       | 172/600 [03:55<09:49,  1.38s/it]Checking VQVAE for PixelCNN
 29%|██▉       | 173/600 [03:56<09:53,  1.39s/it]Checking VQVAE for PixelCNN
 29%|██▉       | 174/600 [03:57<09:51,  1.39s/it]Checking VQVAE for PixelCNN
 29%|██▉       | 175/600 [03:59<09:50,  1.39s/it]Checking VQVAE for PixelCNN
 29%|██▉       | 176/600 [04:00<09:49,  1.39s/it]Checking VQVAE for PixelCNN
 30%|██▉       | 177/600 [04:02<09:48,  1.39s/it]Checking VQVAE for PixelCNN
 30%|██▉       | 178/600 [04:03<09:47,  1.39s/it]Checking VQVAE for PixelCNN
 30%|██▉       | 179/600 [04:04<09:45,  1.39s/it]Checking VQVAE for PixelCNN
 30%|███       | 180/600 [04:06<09:43,  1.39s/it]Checking VQVAE for PixelCNN
 30%|███       | 181/600 [04:07<09:42,  1.39s/it]Checking VQVAE for PixelCNN
 30%|███       | 182/600 [04:08<09:39,  1.39s/it]Checking VQVAE for PixelCNN
 30%|███       | 183/600 [04:10<09:38,  1.39s/it]Checking VQVAE for PixelCNN
 31%|███       | 184/600 [04:11<09:45,  1.41s/it]Checking VQVAE for PixelCNN
 31%|███       | 185/600 [04:13<09:40,  1.40s/it]Checking VQVAE for PixelCNN
 31%|███       | 186/600 [04:14<09:35,  1.39s/it]Checking VQVAE for PixelCNN
 31%|███       | 187/600 [04:16<09:51,  1.43s/it]Checking VQVAE for PixelCNN
 31%|███▏      | 188/600 [04:17<09:42,  1.41s/it]Checking VQVAE for PixelCNN
 32%|███▏      | 189/600 [04:18<09:35,  1.40s/it]Checking VQVAE for PixelCNN
 32%|███▏      | 190/600 [04:20<09:30,  1.39s/it]Checking VQVAE for PixelCNN
 32%|███▏      | 191/600 [04:21<09:26,  1.38s/it]Checking VQVAE for PixelCNN
 32%|███▏      | 192/600 [04:22<09:22,  1.38s/it]Checking VQVAE for PixelCNN
 32%|███▏      | 193/600 [04:24<09:20,  1.38s/it]Checking VQVAE for PixelCNN
 32%|███▏      | 194/600 [04:25<09:17,  1.37s/it]Checking VQVAE for PixelCNN
 32%|███▎      | 195/600 [04:27<09:15,  1.37s/it]Checking VQVAE for PixelCNN
 33%|███▎      | 196/600 [04:28<09:13,  1.37s/it]Checking VQVAE for PixelCNN
 33%|███▎      | 197/600 [04:29<09:12,  1.37s/it]Checking VQVAE for PixelCNN
 33%|███▎      | 198/600 [04:31<09:11,  1.37s/it]Checking VQVAE for PixelCNN
 33%|███▎      | 199/600 [04:32<09:09,  1.37s/it]Checking VQVAE for PixelCNN
 33%|███▎      | 200/600 [04:33<09:07,  1.37s/it]Checking VQVAE for PixelCNN
 34%|███▎      | 201/600 [04:35<09:06,  1.37s/it]Checking VQVAE for PixelCNN
 34%|███▎      | 202/600 [04:36<09:05,  1.37s/it]Checking VQVAE for PixelCNN
 34%|███▍      | 203/600 [04:38<09:04,  1.37s/it]Checking VQVAE for PixelCNN
 34%|███▍      | 204/600 [04:39<09:02,  1.37s/it]Checking VQVAE for PixelCNN
 34%|███▍      | 205/600 [04:40<09:04,  1.38s/it]Checking VQVAE for PixelCNN
 34%|███▍      | 206/600 [04:42<09:02,  1.38s/it]Checking VQVAE for PixelCNN
 34%|███▍      | 207/600 [04:43<08:59,  1.37s/it]Checking VQVAE for PixelCNN
 35%|███▍      | 208/600 [04:44<08:59,  1.38s/it]Checking VQVAE for PixelCNN
 35%|███▍      | 209/600 [04:46<08:57,  1.37s/it]Checking VQVAE for PixelCNN
 35%|███▌      | 210/600 [04:47<08:54,  1.37s/it]Checking VQVAE for PixelCNN
 35%|███▌      | 211/600 [04:49<08:54,  1.37s/it]Checking VQVAE for PixelCNN
 35%|███▌      | 212/600 [04:50<08:53,  1.37s/it]Checking VQVAE for PixelCNN
 36%|███▌      | 213/600 [04:51<08:51,  1.37s/it]Checking VQVAE for PixelCNN
 36%|███▌      | 214/600 [04:53<08:49,  1.37s/it]Checking VQVAE for PixelCNN
 36%|███▌      | 215/600 [04:54<08:48,  1.37s/it]Checking VQVAE for PixelCNN
 36%|███▌      | 216/600 [04:55<08:47,  1.37s/it]Checking VQVAE for PixelCNN
 36%|███▌      | 217/600 [04:57<08:46,  1.37s/it]Checking VQVAE for PixelCNN
 36%|███▋      | 218/600 [04:58<08:44,  1.37s/it]Checking VQVAE for PixelCNN
 36%|███▋      | 219/600 [05:00<08:43,  1.37s/it]Checking VQVAE for PixelCNN
 37%|███▋      | 220/600 [05:01<08:41,  1.37s/it]Checking VQVAE for PixelCNN
 37%|███▋      | 221/600 [05:02<08:39,  1.37s/it]Checking VQVAE for PixelCNN
 37%|███▋      | 222/600 [05:04<08:37,  1.37s/it]Checking VQVAE for PixelCNN
 37%|███▋      | 223/600 [05:05<08:37,  1.37s/it]Checking VQVAE for PixelCNN
 37%|███▋      | 224/600 [05:06<08:36,  1.37s/it]Checking VQVAE for PixelCNN
 38%|███▊      | 225/600 [05:08<08:34,  1.37s/it]Checking VQVAE for PixelCNN
 38%|███▊      | 226/600 [05:09<08:33,  1.37s/it]Checking VQVAE for PixelCNN
 38%|███▊      | 227/600 [05:10<08:32,  1.37s/it]Checking VQVAE for PixelCNN
 38%|███▊      | 228/600 [05:12<08:31,  1.38s/it]Checking VQVAE for PixelCNN
 38%|███▊      | 229/600 [05:13<08:33,  1.38s/it]Checking VQVAE for PixelCNN
 38%|███▊      | 230/600 [05:15<08:32,  1.38s/it]Checking VQVAE for PixelCNN
 38%|███▊      | 231/600 [05:16<08:32,  1.39s/it]Checking VQVAE for PixelCNN
 39%|███▊      | 232/600 [05:17<08:29,  1.38s/it]Checking VQVAE for PixelCNN
 39%|███▉      | 233/600 [05:19<08:29,  1.39s/it]Checking VQVAE for PixelCNN
 39%|███▉      | 234/600 [05:20<08:32,  1.40s/it]Checking VQVAE for PixelCNN
 39%|███▉      | 235/600 [05:22<08:28,  1.39s/it]Checking VQVAE for PixelCNN
 39%|███▉      | 236/600 [05:23<08:25,  1.39s/it]Checking VQVAE for PixelCNN
 40%|███▉      | 237/600 [05:24<08:23,  1.39s/it]Checking VQVAE for PixelCNN
 40%|███▉      | 238/600 [05:26<08:21,  1.38s/it]Checking VQVAE for PixelCNN
 40%|███▉      | 239/600 [05:27<08:22,  1.39s/it]Checking VQVAE for PixelCNN
 40%|████      | 240/600 [05:29<08:28,  1.41s/it]Checking VQVAE for PixelCNN
 40%|████      | 241/600 [05:30<08:23,  1.40s/it]Checking VQVAE for PixelCNN
 40%|████      | 242/600 [05:31<08:19,  1.40s/it]Checking VQVAE for PixelCNN
 40%|████      | 243/600 [05:33<08:16,  1.39s/it]Checking VQVAE for PixelCNN
 41%|████      | 244/600 [05:34<08:13,  1.39s/it]Checking VQVAE for PixelCNN
 41%|████      | 245/600 [05:36<08:11,  1.38s/it]Checking VQVAE for PixelCNN
 41%|████      | 246/600 [05:37<08:09,  1.38s/it]Checking VQVAE for PixelCNN
 41%|████      | 247/600 [05:38<08:16,  1.41s/it]Checking VQVAE for PixelCNN
 41%|████▏     | 248/600 [05:40<08:11,  1.40s/it]Checking VQVAE for PixelCNN
 42%|████▏     | 249/600 [05:41<08:08,  1.39s/it]Checking VQVAE for PixelCNN
 42%|████▏     | 250/600 [05:42<08:05,  1.39s/it]Checking VQVAE for PixelCNN
 42%|████▏     | 251/600 [05:44<08:07,  1.40s/it]Checking VQVAE for PixelCNN
 42%|████▏     | 252/600 [05:45<08:06,  1.40s/it]Checking VQVAE for PixelCNN
 42%|████▏     | 253/600 [05:47<08:03,  1.39s/it]Checking VQVAE for PixelCNN
 42%|████▏     | 254/600 [05:48<08:01,  1.39s/it]Checking VQVAE for PixelCNN
 42%|████▎     | 255/600 [05:49<08:00,  1.39s/it]Checking VQVAE for PixelCNN
 43%|████▎     | 256/600 [05:51<07:59,  1.40s/it]Checking VQVAE for PixelCNN
 43%|████▎     | 257/600 [05:52<07:56,  1.39s/it]Checking VQVAE for PixelCNN
 43%|████▎     | 258/600 [05:54<07:55,  1.39s/it]Checking VQVAE for PixelCNN
 43%|████▎     | 259/600 [05:55<07:54,  1.39s/it]Checking VQVAE for PixelCNN
 43%|████▎     | 260/600 [05:56<07:53,  1.39s/it]Checking VQVAE for PixelCNN
 44%|████▎     | 261/600 [05:58<07:52,  1.39s/it]Checking VQVAE for PixelCNN
 44%|████▎     | 262/600 [05:59<07:51,  1.40s/it]Checking VQVAE for PixelCNN
 44%|████▍     | 263/600 [06:01<07:53,  1.41s/it]Checking VQVAE for PixelCNN
 44%|████▍     | 264/600 [06:02<07:51,  1.40s/it]Checking VQVAE for PixelCNN
 44%|████▍     | 265/600 [06:03<07:50,  1.40s/it]Checking VQVAE for PixelCNN
 44%|████▍     | 266/600 [06:05<07:48,  1.40s/it]Checking VQVAE for PixelCNN
 44%|████▍     | 267/600 [06:06<07:47,  1.40s/it]Checking VQVAE for PixelCNN
 45%|████▍     | 268/600 [06:08<07:49,  1.41s/it]Checking VQVAE for PixelCNN
 45%|████▍     | 269/600 [06:09<07:47,  1.41s/it]Checking VQVAE for PixelCNN
 45%|████▌     | 270/600 [06:11<07:45,  1.41s/it]Checking VQVAE for PixelCNN
 45%|████▌     | 271/600 [06:12<07:43,  1.41s/it]Checking VQVAE for PixelCNN
 45%|████▌     | 272/600 [06:13<07:40,  1.40s/it]Checking VQVAE for PixelCNN
 46%|████▌     | 273/600 [06:15<07:36,  1.40s/it]Checking VQVAE for PixelCNN
 46%|████▌     | 274/600 [06:16<07:38,  1.41s/it]Checking VQVAE for PixelCNN
 46%|████▌     | 275/600 [06:18<07:34,  1.40s/it]Checking VQVAE for PixelCNN
 46%|████▌     | 276/600 [06:19<07:35,  1.41s/it]Checking VQVAE for PixelCNN
 46%|████▌     | 277/600 [06:20<07:34,  1.41s/it]Checking VQVAE for PixelCNN
 46%|████▋     | 278/600 [06:22<07:31,  1.40s/it]Checking VQVAE for PixelCNN
 46%|████▋     | 279/600 [06:23<07:29,  1.40s/it]Checking VQVAE for PixelCNN
 47%|████▋     | 280/600 [06:25<07:27,  1.40s/it]Checking VQVAE for PixelCNN
 47%|████▋     | 281/600 [06:26<07:37,  1.43s/it]Checking VQVAE for PixelCNN
 47%|████▋     | 282/600 [06:27<07:32,  1.42s/it]Checking VQVAE for PixelCNN
 47%|████▋     | 283/600 [06:29<07:28,  1.41s/it]Checking VQVAE for PixelCNN
 47%|████▋     | 284/600 [06:30<07:25,  1.41s/it]Checking VQVAE for PixelCNN
 48%|████▊     | 285/600 [06:32<07:23,  1.41s/it]Checking VQVAE for PixelCNN
 48%|████▊     | 286/600 [06:33<07:20,  1.40s/it]Checking VQVAE for PixelCNN
 48%|████▊     | 287/600 [06:34<07:18,  1.40s/it]Checking VQVAE for PixelCNN
 48%|████▊     | 288/600 [06:36<07:16,  1.40s/it]Checking VQVAE for PixelCNN
 48%|████▊     | 289/600 [06:37<07:15,  1.40s/it]Checking VQVAE for PixelCNN
 48%|████▊     | 290/600 [06:39<07:14,  1.40s/it]Checking VQVAE for PixelCNN
 48%|████▊     | 291/600 [06:40<07:13,  1.40s/it]Checking VQVAE for PixelCNN
 49%|████▊     | 292/600 [06:41<07:11,  1.40s/it]Checking VQVAE for PixelCNN
 49%|████▉     | 293/600 [06:43<07:09,  1.40s/it]Checking VQVAE for PixelCNN
 49%|████▉     | 294/600 [06:44<07:08,  1.40s/it]Checking VQVAE for PixelCNN
 49%|████▉     | 295/600 [06:46<07:05,  1.40s/it]Checking VQVAE for PixelCNN
 49%|████▉     | 296/600 [06:47<07:03,  1.39s/it]Checking VQVAE for PixelCNN
 50%|████▉     | 297/600 [06:48<07:01,  1.39s/it]Checking VQVAE for PixelCNN
 50%|████▉     | 298/600 [06:50<07:03,  1.40s/it]Checking VQVAE for PixelCNN
 50%|████▉     | 299/600 [06:51<07:00,  1.40s/it]Checking VQVAE for PixelCNN
 50%|█████     | 300/600 [06:53<06:58,  1.39s/it]Checking VQVAE for PixelCNN
 50%|█████     | 301/600 [06:54<06:56,  1.39s/it]Checking VQVAE for PixelCNN
 50%|█████     | 302/600 [06:55<06:54,  1.39s/it]Checking VQVAE for PixelCNN
 50%|█████     | 303/600 [06:57<06:52,  1.39s/it]Checking VQVAE for PixelCNN
 51%|█████     | 304/600 [06:58<06:49,  1.38s/it]Checking VQVAE for PixelCNN
 51%|█████     | 305/600 [06:59<06:47,  1.38s/it]Checking VQVAE for PixelCNN
 51%|█████     | 306/600 [07:01<06:46,  1.38s/it]Checking VQVAE for PixelCNN
 51%|█████     | 307/600 [07:02<06:45,  1.38s/it]Checking VQVAE for PixelCNN
 51%|█████▏    | 308/600 [07:04<06:43,  1.38s/it]Checking VQVAE for PixelCNN
 52%|█████▏    | 309/600 [07:05<06:42,  1.38s/it]Checking VQVAE for PixelCNN
 52%|█████▏    | 310/600 [07:06<06:41,  1.38s/it]Checking VQVAE for PixelCNN
 52%|█████▏    | 311/600 [07:08<06:39,  1.38s/it]Checking VQVAE for PixelCNN
 52%|█████▏    | 312/600 [07:09<06:38,  1.38s/it]Checking VQVAE for PixelCNN
 52%|█████▏    | 313/600 [07:11<06:36,  1.38s/it]Checking VQVAE for PixelCNN
 52%|█████▏    | 314/600 [07:12<06:35,  1.38s/it]Checking VQVAE for PixelCNN
 52%|█████▎    | 315/600 [07:13<06:33,  1.38s/it]Checking VQVAE for PixelCNN
 53%|█████▎    | 316/600 [07:15<06:32,  1.38s/it]Checking VQVAE for PixelCNN
 53%|█████▎    | 317/600 [07:16<06:31,  1.38s/it]Checking VQVAE for PixelCNN
 53%|█████▎    | 318/600 [07:17<06:30,  1.38s/it]Checking VQVAE for PixelCNN
 53%|█████▎    | 319/600 [07:19<06:33,  1.40s/it]Checking VQVAE for PixelCNN
 53%|█████▎    | 320/600 [07:20<06:31,  1.40s/it]Checking VQVAE for PixelCNN
 54%|█████▎    | 321/600 [07:22<06:29,  1.39s/it]Checking VQVAE for PixelCNN
 54%|█████▎    | 322/600 [07:23<06:26,  1.39s/it]Checking VQVAE for PixelCNN
 54%|█████▍    | 323/600 [07:24<06:24,  1.39s/it]Checking VQVAE for PixelCNN
 54%|█████▍    | 324/600 [07:26<06:22,  1.39s/it]Checking VQVAE for PixelCNN
 54%|█████▍    | 325/600 [07:27<06:20,  1.39s/it]Checking VQVAE for PixelCNN
 54%|█████▍    | 326/600 [07:29<06:19,  1.39s/it]Checking VQVAE for PixelCNN
 55%|█████▍    | 327/600 [07:30<06:18,  1.39s/it]Checking VQVAE for PixelCNN
 55%|█████▍    | 328/600 [07:32<06:27,  1.43s/it]Checking VQVAE for PixelCNN
 55%|█████▍    | 329/600 [07:33<06:27,  1.43s/it]Checking VQVAE for PixelCNN
 55%|█████▌    | 330/600 [07:35<06:37,  1.47s/it]Checking VQVAE for PixelCNN
 55%|█████▌    | 331/600 [07:36<06:29,  1.45s/it]Checking VQVAE for PixelCNN
 55%|█████▌    | 332/600 [07:37<06:22,  1.43s/it]Checking VQVAE for PixelCNN
 56%|█████▌    | 333/600 [07:39<06:18,  1.42s/it]Checking VQVAE for PixelCNN
 56%|█████▌    | 334/600 [07:40<06:14,  1.41s/it]Checking VQVAE for PixelCNN
 56%|█████▌    | 335/600 [07:41<06:11,  1.40s/it]Checking VQVAE for PixelCNN
 56%|█████▌    | 336/600 [07:43<06:09,  1.40s/it]Checking VQVAE for PixelCNN
 56%|█████▌    | 337/600 [07:44<06:06,  1.40s/it]Checking VQVAE for PixelCNN
 56%|█████▋    | 338/600 [07:46<06:04,  1.39s/it]Checking VQVAE for PixelCNN
 56%|█████▋    | 339/600 [07:47<06:02,  1.39s/it]Checking VQVAE for PixelCNN
 57%|█████▋    | 340/600 [07:48<06:01,  1.39s/it]Checking VQVAE for PixelCNN
 57%|█████▋    | 341/600 [07:50<05:59,  1.39s/it]Checking VQVAE for PixelCNN
 57%|█████▋    | 342/600 [07:51<05:58,  1.39s/it]Checking VQVAE for PixelCNN
 57%|█████▋    | 343/600 [07:53<05:56,  1.39s/it]Checking VQVAE for PixelCNN
 57%|█████▋    | 344/600 [07:54<05:55,  1.39s/it]Checking VQVAE for PixelCNN
 57%|█████▊    | 345/600 [07:55<05:53,  1.39s/it]Checking VQVAE for PixelCNN
 58%|█████▊    | 346/600 [07:57<05:52,  1.39s/it]Checking VQVAE for PixelCNN
 58%|█████▊    | 347/600 [07:58<05:51,  1.39s/it]Checking VQVAE for PixelCNN
 58%|█████▊    | 348/600 [08:00<05:49,  1.39s/it]Checking VQVAE for PixelCNN
 58%|█████▊    | 349/600 [08:01<05:49,  1.39s/it]Checking VQVAE for PixelCNN
 58%|█████▊    | 350/600 [08:02<05:49,  1.40s/it]Checking VQVAE for PixelCNN
 58%|█████▊    | 351/600 [08:04<05:50,  1.41s/it]Checking VQVAE for PixelCNN
 59%|█████▊    | 352/600 [08:05<05:48,  1.41s/it]Checking VQVAE for PixelCNN
 59%|█████▉    | 353/600 [08:07<05:47,  1.41s/it]Checking VQVAE for PixelCNN
 59%|█████▉    | 354/600 [08:08<05:45,  1.41s/it]Checking VQVAE for PixelCNN
 59%|█████▉    | 355/600 [08:09<05:44,  1.41s/it]Checking VQVAE for PixelCNN
 59%|█████▉    | 356/600 [08:11<05:42,  1.40s/it]Checking VQVAE for PixelCNN
 60%|█████▉    | 357/600 [08:12<05:41,  1.41s/it]Checking VQVAE for PixelCNN
 60%|█████▉    | 358/600 [08:14<05:39,  1.40s/it]Checking VQVAE for PixelCNN
 60%|█████▉    | 359/600 [08:15<05:38,  1.41s/it]Checking VQVAE for PixelCNN
 60%|██████    | 360/600 [08:16<05:37,  1.41s/it]Checking VQVAE for PixelCNN
 60%|██████    | 361/600 [08:18<05:35,  1.41s/it]Checking VQVAE for PixelCNN
 60%|██████    | 362/600 [08:19<05:34,  1.41s/it]Checking VQVAE for PixelCNN
 60%|██████    | 363/600 [08:21<05:33,  1.41s/it]Checking VQVAE for PixelCNN
 61%|██████    | 364/600 [08:22<05:30,  1.40s/it]Checking VQVAE for PixelCNN
 61%|██████    | 365/600 [08:23<05:30,  1.40s/it]Checking VQVAE for PixelCNN
 61%|██████    | 366/600 [08:25<05:29,  1.41s/it]Checking VQVAE for PixelCNN
 61%|██████    | 367/600 [08:26<05:27,  1.41s/it]Checking VQVAE for PixelCNN
 61%|██████▏   | 368/600 [08:28<05:26,  1.41s/it]Checking VQVAE for PixelCNN
 62%|██████▏   | 369/600 [08:29<05:24,  1.41s/it]Checking VQVAE for PixelCNN
 62%|██████▏   | 370/600 [08:30<05:23,  1.41s/it]Checking VQVAE for PixelCNN
 62%|██████▏   | 371/600 [08:32<05:22,  1.41s/it]Checking VQVAE for PixelCNN
 62%|██████▏   | 372/600 [08:33<05:19,  1.40s/it]Checking VQVAE for PixelCNN
 62%|██████▏   | 373/600 [08:35<05:17,  1.40s/it]Checking VQVAE for PixelCNN
 62%|██████▏   | 374/600 [08:36<05:15,  1.40s/it]Checking VQVAE for PixelCNN
 62%|██████▎   | 375/600 [08:37<05:13,  1.39s/it]Checking VQVAE for PixelCNN
 63%|██████▎   | 376/600 [08:39<05:11,  1.39s/it]Checking VQVAE for PixelCNN
 63%|██████▎   | 377/600 [08:40<05:10,  1.39s/it]Checking VQVAE for PixelCNN
 63%|██████▎   | 378/600 [08:42<05:09,  1.39s/it]Checking VQVAE for PixelCNN
 63%|██████▎   | 379/600 [08:43<05:07,  1.39s/it]Checking VQVAE for PixelCNN
 63%|██████▎   | 380/600 [08:44<05:06,  1.39s/it]Checking VQVAE for PixelCNN
 64%|██████▎   | 381/600 [08:46<05:04,  1.39s/it]Checking VQVAE for PixelCNN
 64%|██████▎   | 382/600 [08:47<05:02,  1.39s/it]Checking VQVAE for PixelCNN
 64%|██████▍   | 383/600 [08:49<05:01,  1.39s/it]Checking VQVAE for PixelCNN
 64%|██████▍   | 384/600 [08:50<05:02,  1.40s/it]Checking VQVAE for PixelCNN
 64%|██████▍   | 385/600 [08:51<04:59,  1.39s/it]Checking VQVAE for PixelCNN
 64%|██████▍   | 386/600 [08:53<04:57,  1.39s/it]Checking VQVAE for PixelCNN
 64%|██████▍   | 387/600 [08:54<04:55,  1.39s/it]Checking VQVAE for PixelCNN
 65%|██████▍   | 388/600 [08:55<04:53,  1.39s/it]Checking VQVAE for PixelCNN
 65%|██████▍   | 389/600 [08:57<04:51,  1.38s/it]Checking VQVAE for PixelCNN
 65%|██████▌   | 390/600 [08:58<04:50,  1.38s/it]Checking VQVAE for PixelCNN
 65%|██████▌   | 391/600 [09:00<04:48,  1.38s/it]Checking VQVAE for PixelCNN
 65%|██████▌   | 392/600 [09:01<04:47,  1.38s/it]Checking VQVAE for PixelCNN
 66%|██████▌   | 393/600 [09:02<04:45,  1.38s/it]Checking VQVAE for PixelCNN
 66%|██████▌   | 394/600 [09:04<04:44,  1.38s/it]Checking VQVAE for PixelCNN
 66%|██████▌   | 395/600 [09:05<04:43,  1.38s/it]Checking VQVAE for PixelCNN
 66%|██████▌   | 396/600 [09:07<04:41,  1.38s/it]Checking VQVAE for PixelCNN
 66%|██████▌   | 397/600 [09:08<04:40,  1.38s/it]Checking VQVAE for PixelCNN
 66%|██████▋   | 398/600 [09:09<04:39,  1.38s/it]Checking VQVAE for PixelCNN
 66%|██████▋   | 399/600 [09:11<04:37,  1.38s/it]Checking VQVAE for PixelCNN
 67%|██████▋   | 400/600 [09:12<04:40,  1.40s/it]Checking VQVAE for PixelCNN
 67%|██████▋   | 401/600 [09:14<04:42,  1.42s/it]Checking VQVAE for PixelCNN
 67%|██████▋   | 402/600 [09:15<04:38,  1.41s/it]Checking VQVAE for PixelCNN
 67%|██████▋   | 403/600 [09:16<04:35,  1.40s/it]Checking VQVAE for PixelCNN
 67%|██████▋   | 404/600 [09:18<04:33,  1.39s/it]Checking VQVAE for PixelCNN
 68%|██████▊   | 405/600 [09:19<04:31,  1.39s/it]Checking VQVAE for PixelCNN
 68%|██████▊   | 406/600 [09:20<04:29,  1.39s/it]Checking VQVAE for PixelCNN
 68%|██████▊   | 407/600 [09:22<04:31,  1.41s/it]Checking VQVAE for PixelCNN
 68%|██████▊   | 408/600 [09:23<04:28,  1.40s/it]Checking VQVAE for PixelCNN
 68%|██████▊   | 409/600 [09:25<04:26,  1.40s/it]Checking VQVAE for PixelCNN
 68%|██████▊   | 410/600 [09:26<04:24,  1.39s/it]Checking VQVAE for PixelCNN
 68%|██████▊   | 411/600 [09:28<04:23,  1.39s/it]Checking VQVAE for PixelCNN
 69%|██████▊   | 412/600 [09:29<04:22,  1.40s/it]Checking VQVAE for PixelCNN
 69%|██████▉   | 413/600 [09:30<04:20,  1.39s/it]Checking VQVAE for PixelCNN
 69%|██████▉   | 414/600 [09:32<04:18,  1.39s/it]Checking VQVAE for PixelCNN
 69%|██████▉   | 415/600 [09:33<04:17,  1.39s/it]Checking VQVAE for PixelCNN
 69%|██████▉   | 416/600 [09:34<04:16,  1.39s/it]Checking VQVAE for PixelCNN
 70%|██████▉   | 417/600 [09:36<04:14,  1.39s/it]Checking VQVAE for PixelCNN
 70%|██████▉   | 418/600 [09:37<04:13,  1.39s/it]Checking VQVAE for PixelCNN
 70%|██████▉   | 419/600 [09:39<04:11,  1.39s/it]Checking VQVAE for PixelCNN
 70%|███████   | 420/600 [09:40<04:10,  1.39s/it]Checking VQVAE for PixelCNN
 70%|███████   | 421/600 [09:42<04:15,  1.42s/it]Checking VQVAE for PixelCNN
 70%|███████   | 422/600 [09:43<04:11,  1.41s/it]Checking VQVAE for PixelCNN
 70%|███████   | 423/600 [09:44<04:09,  1.41s/it]Checking VQVAE for PixelCNN
 71%|███████   | 424/600 [09:46<04:16,  1.46s/it]Checking VQVAE for PixelCNN
 71%|███████   | 425/600 [09:47<04:11,  1.44s/it]Checking VQVAE for PixelCNN
 71%|███████   | 426/600 [09:49<04:07,  1.42s/it]Checking VQVAE for PixelCNN
 71%|███████   | 427/600 [09:50<04:05,  1.42s/it]Checking VQVAE for PixelCNN
 71%|███████▏  | 428/600 [09:51<04:02,  1.41s/it]Checking VQVAE for PixelCNN
 72%|███████▏  | 429/600 [09:53<04:01,  1.41s/it]Checking VQVAE for PixelCNN
 72%|███████▏  | 430/600 [09:55<04:13,  1.49s/it]Checking VQVAE for PixelCNN
 72%|███████▏  | 431/600 [09:56<04:08,  1.47s/it]Checking VQVAE for PixelCNN
 72%|███████▏  | 432/600 [09:57<04:04,  1.45s/it]Checking VQVAE for PixelCNN
 72%|███████▏  | 433/600 [09:59<04:01,  1.44s/it]Checking VQVAE for PixelCNN
 72%|███████▏  | 434/600 [10:00<03:58,  1.43s/it]Checking VQVAE for PixelCNN
 72%|███████▎  | 435/600 [10:02<03:55,  1.43s/it]Checking VQVAE for PixelCNN
 73%|███████▎  | 436/600 [10:03<03:54,  1.43s/it]Checking VQVAE for PixelCNN
 73%|███████▎  | 437/600 [10:05<03:54,  1.44s/it]Checking VQVAE for PixelCNN
 73%|███████▎  | 438/600 [10:06<03:51,  1.43s/it]Checking VQVAE for PixelCNN
 73%|███████▎  | 439/600 [10:07<03:49,  1.43s/it]Checking VQVAE for PixelCNN
 73%|███████▎  | 440/600 [10:09<03:47,  1.42s/it]Checking VQVAE for PixelCNN
 74%|███████▎  | 441/600 [10:10<03:48,  1.43s/it]Checking VQVAE for PixelCNN
 74%|███████▎  | 442/600 [10:12<03:45,  1.43s/it]Checking VQVAE for PixelCNN
 74%|███████▍  | 443/600 [10:13<03:43,  1.42s/it]Checking VQVAE for PixelCNN
 74%|███████▍  | 444/600 [10:14<03:42,  1.43s/it]Checking VQVAE for PixelCNN
 74%|███████▍  | 445/600 [10:16<03:40,  1.42s/it]Checking VQVAE for PixelCNN
 74%|███████▍  | 446/600 [10:17<03:38,  1.42s/it]Checking VQVAE for PixelCNN
 74%|███████▍  | 447/600 [10:19<03:37,  1.42s/it]Checking VQVAE for PixelCNN
 75%|███████▍  | 448/600 [10:20<03:35,  1.42s/it]Checking VQVAE for PixelCNN
 75%|███████▍  | 449/600 [10:22<03:34,  1.42s/it]Checking VQVAE for PixelCNN
 75%|███████▌  | 450/600 [10:23<03:32,  1.42s/it]Checking VQVAE for PixelCNN
 75%|███████▌  | 451/600 [10:24<03:31,  1.42s/it]Checking VQVAE for PixelCNN
 75%|███████▌  | 452/600 [10:26<03:29,  1.42s/it]Checking VQVAE for PixelCNN
 76%|███████▌  | 453/600 [10:27<03:28,  1.42s/it]Checking VQVAE for PixelCNN
 76%|███████▌  | 454/600 [10:29<03:28,  1.43s/it]Checking VQVAE for PixelCNN
 76%|███████▌  | 455/600 [10:30<03:26,  1.42s/it]Checking VQVAE for PixelCNN
 76%|███████▌  | 456/600 [10:32<03:24,  1.42s/it]Checking VQVAE for PixelCNN
 76%|███████▌  | 457/600 [10:33<03:23,  1.42s/it]Checking VQVAE for PixelCNN
 76%|███████▋  | 458/600 [10:34<03:21,  1.42s/it]Checking VQVAE for PixelCNN
 76%|███████▋  | 459/600 [10:36<03:19,  1.42s/it]Checking VQVAE for PixelCNN
 77%|███████▋  | 460/600 [10:37<03:18,  1.42s/it]Checking VQVAE for PixelCNN
 77%|███████▋  | 461/600 [10:39<03:18,  1.43s/it]Checking VQVAE for PixelCNN
 77%|███████▋  | 462/600 [10:40<03:16,  1.43s/it]Checking VQVAE for PixelCNN
 77%|███████▋  | 463/600 [10:41<03:15,  1.42s/it]Checking VQVAE for PixelCNN
 77%|███████▋  | 464/600 [10:43<03:13,  1.42s/it]Checking VQVAE for PixelCNN
 78%|███████▊  | 465/600 [10:44<03:14,  1.44s/it]Checking VQVAE for PixelCNN
 78%|███████▊  | 466/600 [10:46<03:12,  1.44s/it]Checking VQVAE for PixelCNN
 78%|███████▊  | 467/600 [10:47<03:15,  1.47s/it]Checking VQVAE for PixelCNN
 78%|███████▊  | 468/600 [10:49<03:14,  1.47s/it]Checking VQVAE for PixelCNN
 78%|███████▊  | 469/600 [10:50<03:11,  1.46s/it]Checking VQVAE for PixelCNN
 78%|███████▊  | 470/600 [10:52<03:09,  1.46s/it]Checking VQVAE for PixelCNN
 78%|███████▊  | 471/600 [10:53<03:06,  1.45s/it]Checking VQVAE for PixelCNN
 79%|███████▊  | 472/600 [10:55<03:04,  1.44s/it]Checking VQVAE for PixelCNN
 79%|███████▉  | 473/600 [10:56<03:02,  1.44s/it]Checking VQVAE for PixelCNN
 79%|███████▉  | 474/600 [10:57<03:01,  1.44s/it]Checking VQVAE for PixelCNN
 79%|███████▉  | 475/600 [10:59<02:59,  1.43s/it]Checking VQVAE for PixelCNN
 79%|███████▉  | 476/600 [11:00<02:57,  1.43s/it]Checking VQVAE for PixelCNN
 80%|███████▉  | 477/600 [11:02<02:56,  1.44s/it]Checking VQVAE for PixelCNN
 80%|███████▉  | 478/600 [11:03<02:54,  1.43s/it]Checking VQVAE for PixelCNN
 80%|███████▉  | 479/600 [11:05<02:58,  1.47s/it]Checking VQVAE for PixelCNN
 80%|████████  | 480/600 [11:06<02:55,  1.46s/it]Checking VQVAE for PixelCNN
 80%|████████  | 481/600 [11:08<02:53,  1.45s/it]Checking VQVAE for PixelCNN
 80%|████████  | 482/600 [11:09<02:50,  1.45s/it]Checking VQVAE for PixelCNN
 80%|████████  | 483/600 [11:10<02:49,  1.45s/it]Checking VQVAE for PixelCNN
 81%|████████  | 484/600 [11:12<02:47,  1.44s/it]Checking VQVAE for PixelCNN
 81%|████████  | 485/600 [11:13<02:45,  1.44s/it]Checking VQVAE for PixelCNN
 81%|████████  | 486/600 [11:15<02:44,  1.44s/it]Checking VQVAE for PixelCNN
 81%|████████  | 487/600 [11:16<02:44,  1.45s/it]Checking VQVAE for PixelCNN
 81%|████████▏ | 488/600 [11:18<02:41,  1.45s/it]Checking VQVAE for PixelCNN
 82%|████████▏ | 489/600 [11:19<02:40,  1.44s/it]Checking VQVAE for PixelCNN
 82%|████████▏ | 490/600 [11:21<02:38,  1.44s/it]Checking VQVAE for PixelCNN
 82%|████████▏ | 491/600 [11:22<02:36,  1.43s/it]Checking VQVAE for PixelCNN
 82%|████████▏ | 492/600 [11:23<02:34,  1.43s/it]Checking VQVAE for PixelCNN
 82%|████████▏ | 493/600 [11:25<02:33,  1.43s/it]Checking VQVAE for PixelCNN
 82%|████████▏ | 494/600 [11:26<02:32,  1.44s/it]Checking VQVAE for PixelCNN
 82%|████████▎ | 495/600 [11:28<02:30,  1.44s/it]Checking VQVAE for PixelCNN
 83%|████████▎ | 496/600 [11:29<02:29,  1.44s/it]Checking VQVAE for PixelCNN
 83%|████████▎ | 497/600 [11:31<02:27,  1.43s/it]Checking VQVAE for PixelCNN
 83%|████████▎ | 498/600 [11:32<02:25,  1.43s/it]Checking VQVAE for PixelCNN
 83%|████████▎ | 499/600 [11:33<02:23,  1.42s/it]Checking VQVAE for PixelCNN
 83%|████████▎ | 500/600 [11:35<02:22,  1.42s/it]Checking VQVAE for PixelCNN
 84%|████████▎ | 501/600 [11:36<02:20,  1.42s/it]Checking VQVAE for PixelCNN
 84%|████████▎ | 502/600 [11:38<02:18,  1.42s/it]Checking VQVAE for PixelCNN
 84%|████████▍ | 503/600 [11:39<02:17,  1.42s/it]Checking VQVAE for PixelCNN
 84%|████████▍ | 504/600 [11:41<02:15,  1.42s/it]Checking VQVAE for PixelCNN
 84%|████████▍ | 505/600 [11:42<02:14,  1.42s/it]Checking VQVAE for PixelCNN
 84%|████████▍ | 506/600 [11:43<02:12,  1.41s/it]Checking VQVAE for PixelCNN
 84%|████████▍ | 507/600 [11:45<02:11,  1.41s/it]Checking VQVAE for PixelCNN
 85%|████████▍ | 508/600 [11:46<02:10,  1.42s/it]Checking VQVAE for PixelCNN
 85%|████████▍ | 509/600 [11:48<02:11,  1.44s/it]Checking VQVAE for PixelCNN
 85%|████████▌ | 510/600 [11:49<02:09,  1.44s/it]Checking VQVAE for PixelCNN
 85%|████████▌ | 511/600 [11:51<02:07,  1.43s/it]Checking VQVAE for PixelCNN
 85%|████████▌ | 512/600 [11:52<02:05,  1.43s/it]Checking VQVAE for PixelCNN
 86%|████████▌ | 513/600 [11:53<02:03,  1.42s/it]Checking VQVAE for PixelCNN
 86%|████████▌ | 514/600 [11:55<02:02,  1.42s/it]Checking VQVAE for PixelCNN
 86%|████████▌ | 515/600 [11:56<02:00,  1.42s/it]Checking VQVAE for PixelCNN
 86%|████████▌ | 516/600 [11:58<01:59,  1.42s/it]Checking VQVAE for PixelCNN
 86%|████████▌ | 517/600 [11:59<01:58,  1.43s/it]Checking VQVAE for PixelCNN
 86%|████████▋ | 518/600 [12:00<01:57,  1.43s/it]Checking VQVAE for PixelCNN
 86%|████████▋ | 519/600 [12:02<01:56,  1.43s/it]Checking VQVAE for PixelCNN
 87%|████████▋ | 520/600 [12:03<01:54,  1.43s/it]Checking VQVAE for PixelCNN
 87%|████████▋ | 521/600 [12:05<01:52,  1.43s/it]Checking VQVAE for PixelCNN
 87%|████████▋ | 522/600 [12:06<01:50,  1.42s/it]Checking VQVAE for PixelCNN
 87%|████████▋ | 523/600 [12:08<01:49,  1.42s/it]Checking VQVAE for PixelCNN
 87%|████████▋ | 524/600 [12:09<01:47,  1.42s/it]Checking VQVAE for PixelCNN
 88%|████████▊ | 525/600 [12:10<01:46,  1.42s/it]Checking VQVAE for PixelCNN
 88%|████████▊ | 526/600 [12:12<01:44,  1.42s/it]Checking VQVAE for PixelCNN
 88%|████████▊ | 527/600 [12:13<01:43,  1.42s/it]Checking VQVAE for PixelCNN
 88%|████████▊ | 528/600 [12:15<01:42,  1.42s/it]Checking VQVAE for PixelCNN
 88%|████████▊ | 529/600 [12:16<01:40,  1.42s/it]Checking VQVAE for PixelCNN
 88%|████████▊ | 530/600 [12:18<01:39,  1.42s/it]Checking VQVAE for PixelCNN
 88%|████████▊ | 531/600 [12:19<01:37,  1.42s/it]Checking VQVAE for PixelCNN
 89%|████████▊ | 532/600 [12:20<01:36,  1.42s/it]Checking VQVAE for PixelCNN
 89%|████████▉ | 533/600 [12:22<01:34,  1.42s/it]Checking VQVAE for PixelCNN
 89%|████████▉ | 534/600 [12:23<01:33,  1.42s/it]Checking VQVAE for PixelCNN
 89%|████████▉ | 535/600 [12:25<01:32,  1.42s/it]Checking VQVAE for PixelCNN
 89%|████████▉ | 536/600 [12:26<01:30,  1.42s/it]Checking VQVAE for PixelCNN
 90%|████████▉ | 537/600 [12:27<01:29,  1.42s/it]Checking VQVAE for PixelCNN
 90%|████████▉ | 538/600 [12:29<01:27,  1.42s/it]Checking VQVAE for PixelCNN
 90%|████████▉ | 539/600 [12:30<01:26,  1.42s/it]Checking VQVAE for PixelCNN
 90%|█████████ | 540/600 [12:32<01:25,  1.42s/it]Checking VQVAE for PixelCNN
 90%|█████████ | 541/600 [12:33<01:23,  1.42s/it]Checking VQVAE for PixelCNN
 90%|█████████ | 542/600 [12:35<01:22,  1.42s/it]Checking VQVAE for PixelCNN
 90%|█████████ | 543/600 [12:36<01:20,  1.42s/it]Checking VQVAE for PixelCNN
 91%|█████████ | 544/600 [12:37<01:19,  1.42s/it]Checking VQVAE for PixelCNN
 91%|█████████ | 545/600 [12:39<01:18,  1.42s/it]Checking VQVAE for PixelCNN
 91%|█████████ | 546/600 [12:40<01:16,  1.42s/it]Checking VQVAE for PixelCNN
 91%|█████████ | 547/600 [12:42<01:15,  1.42s/it]Checking VQVAE for PixelCNN
 91%|█████████▏| 548/600 [12:43<01:13,  1.42s/it]Checking VQVAE for PixelCNN
 92%|█████████▏| 549/600 [12:44<01:12,  1.42s/it]Checking VQVAE for PixelCNN
 92%|█████████▏| 550/600 [12:46<01:10,  1.42s/it]Checking VQVAE for PixelCNN
 92%|█████████▏| 551/600 [12:47<01:09,  1.42s/it]Checking VQVAE for PixelCNN
 92%|█████████▏| 552/600 [12:49<01:08,  1.42s/it]Checking VQVAE for PixelCNN
 92%|█████████▏| 553/600 [12:50<01:06,  1.42s/it]Checking VQVAE for PixelCNN
 92%|█████████▏| 554/600 [12:52<01:05,  1.42s/it]Checking VQVAE for PixelCNN
 92%|█████████▎| 555/600 [12:53<01:04,  1.43s/it]Checking VQVAE for PixelCNN
 93%|█████████▎| 556/600 [12:54<01:02,  1.43s/it]Checking VQVAE for PixelCNN
 93%|█████████▎| 557/600 [12:56<01:01,  1.43s/it]Checking VQVAE for PixelCNN
 93%|█████████▎| 558/600 [12:57<01:00,  1.43s/it]Checking VQVAE for PixelCNN
 93%|█████████▎| 559/600 [12:59<00:59,  1.45s/it]Checking VQVAE for PixelCNN
 93%|█████████▎| 560/600 [13:00<00:57,  1.45s/it]Checking VQVAE for PixelCNN
 94%|█████████▎| 561/600 [13:02<00:56,  1.44s/it]Checking VQVAE for PixelCNN
 94%|█████████▎| 562/600 [13:03<00:54,  1.45s/it]Checking VQVAE for PixelCNN
 94%|█████████▍| 563/600 [13:05<00:53,  1.45s/it]Checking VQVAE for PixelCNN
 94%|█████████▍| 564/600 [13:06<00:52,  1.46s/it]Checking VQVAE for PixelCNN
 94%|█████████▍| 565/600 [13:08<00:50,  1.45s/it]Checking VQVAE for PixelCNN
 94%|█████████▍| 566/600 [13:09<00:49,  1.45s/it]Checking VQVAE for PixelCNN
 94%|█████████▍| 567/600 [13:10<00:47,  1.45s/it]Checking VQVAE for PixelCNN
 95%|█████████▍| 568/600 [13:12<00:46,  1.45s/it]Checking VQVAE for PixelCNN
 95%|█████████▍| 569/600 [13:13<00:44,  1.44s/it]Checking VQVAE for PixelCNN
 95%|█████████▌| 570/600 [13:15<00:43,  1.44s/it]Checking VQVAE for PixelCNN
 95%|█████████▌| 571/600 [13:16<00:41,  1.44s/it]Checking VQVAE for PixelCNN
 95%|█████████▌| 572/600 [13:18<00:40,  1.43s/it]Checking VQVAE for PixelCNN
 96%|█████████▌| 573/600 [13:19<00:38,  1.43s/it]Checking VQVAE for PixelCNN
 96%|█████████▌| 574/600 [13:20<00:37,  1.43s/it]Checking VQVAE for PixelCNN
 96%|█████████▌| 575/600 [13:22<00:36,  1.45s/it]Checking VQVAE for PixelCNN
 96%|█████████▌| 576/600 [13:23<00:34,  1.44s/it]Checking VQVAE for PixelCNN
 96%|█████████▌| 577/600 [13:25<00:32,  1.43s/it]Checking VQVAE for PixelCNN
 96%|█████████▋| 578/600 [13:26<00:31,  1.43s/it]Checking VQVAE for PixelCNN
 96%|█████████▋| 579/600 [13:28<00:29,  1.43s/it]Checking VQVAE for PixelCNN
 97%|█████████▋| 580/600 [13:29<00:28,  1.43s/it]Checking VQVAE for PixelCNN
 97%|█████████▋| 581/600 [13:30<00:27,  1.44s/it]Checking VQVAE for PixelCNN
 97%|█████████▋| 582/600 [13:32<00:25,  1.44s/it]Checking VQVAE for PixelCNN
 97%|█████████▋| 583/600 [13:33<00:24,  1.44s/it]Checking VQVAE for PixelCNN
 97%|█████████▋| 584/600 [13:35<00:23,  1.44s/it]Checking VQVAE for PixelCNN
 98%|█████████▊| 585/600 [13:36<00:21,  1.44s/it]Checking VQVAE for PixelCNN
 98%|█████████▊| 586/600 [13:38<00:20,  1.44s/it]Checking VQVAE for PixelCNN
 98%|█████████▊| 587/600 [13:39<00:18,  1.44s/it]Checking VQVAE for PixelCNN
 98%|█████████▊| 588/600 [13:41<00:17,  1.44s/it]Checking VQVAE for PixelCNN
 98%|█████████▊| 589/600 [13:42<00:15,  1.44s/it]Checking VQVAE for PixelCNN
 98%|█████████▊| 590/600 [13:43<00:14,  1.44s/it]Checking VQVAE for PixelCNN
 98%|█████████▊| 591/600 [13:45<00:12,  1.44s/it]Checking VQVAE for PixelCNN
 99%|█████████▊| 592/600 [13:46<00:11,  1.44s/it]Checking VQVAE for PixelCNN
 99%|█████████▉| 593/600 [13:48<00:10,  1.44s/it]Checking VQVAE for PixelCNN
 99%|█████████▉| 594/600 [13:49<00:08,  1.44s/it]Checking VQVAE for PixelCNN
 99%|█████████▉| 595/600 [13:51<00:07,  1.44s/it]Checking VQVAE for PixelCNN
 99%|█████████▉| 596/600 [13:52<00:05,  1.44s/it]Checking VQVAE for PixelCNN
100%|█████████▉| 597/600 [13:54<00:04,  1.45s/it]Checking VQVAE for PixelCNN
100%|█████████▉| 598/600 [13:55<00:02,  1.45s/it]Checking VQVAE for PixelCNN
100%|█████████▉| 599/600 [13:56<00:01,  1.45s/it]Checking VQVAE for PixelCNN
100%|██████████| 600/600 [13:58<00:00,  1.40s/it]
Latent Space = 600 275 1024(32*32) (600, 275, 1024)
test data done
Loading latent block data
Data Num of episodes 600
traj_length= 275 275
Done loading latent block data
Loading latent block data
Data Num of episodes 600
traj_length= 275 275
Done loading latent block data
data_loaders
obs+cond are given as dataset
Finished loading data
Skipping initialization of  GatedMaskedConv2d
Skipping initialization of  GatedMaskedConv2d
Skipping initialization of  GatedMaskedConv2d
Skipping initialization of  GatedMaskedConv2d
Skipping initialization of  GatedMaskedConv2d
Skipping initialization of  GatedMaskedConv2d
Skipping initialization of  GatedMaskedConv2d
Skipping initialization of  GatedMaskedConv2d
Skipping initialization of  GatedMaskedConv2d
Skipping initialization of  GatedMaskedConv2d
Skipping initialization of  GatedMaskedConv2d
Skipping initialization of  GatedMaskedConv2d
Skipping initialization of  GatedMaskedConv2d
Skipping initialization of  GatedMaskedConv2d
Skipping initialization of  GatedMaskedConv2d
Starting training
num_epoch for pixelcnn 30
epoch 0
Checking Batch 0 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 1
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 129.18010330200195
Checking Batch 1 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 2
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.6646683216095
Checking Batch 2 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 3
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.84376907348633
Checking Batch 3 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 4
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.28994297981262
Checking Batch 4 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 5
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.1676390171051
Checking Batch 5 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 6
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.74883937835693
Checking Batch 6 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 7
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.4439742565155
Checking Batch 7 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 8
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.47066116333008
Checking Batch 8 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 9
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.69778609275818
Checking Batch 9 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 10
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.29029774665833
Checking Batch 10 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 11
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.69803285598755
Checking Batch 11 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 12
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.71543955802917
Checking Batch 12 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 13
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.37707090377808
Checking Batch 13 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 14
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.3555872440338
Checking Batch 14 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 15
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.30551505088806
Checking Batch 15 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 16
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.90043902397156
Checking Batch 16 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 17
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.64361810684204
Checking Batch 17 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 18
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.5467131137848
Checking Batch 18 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 19
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.63424038887024
Checking Batch 19 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 20
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.5767798423767
Checking Batch 20 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
break
Trainer / Train
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
Test / Train
Time per Epoch 2994.107515335083
2023-01-12 03:05:03.846523 KST | [test0] --------------------  -------------
2023-01-12 03:05:03.846676 KST | [test0] epoch                   0
2023-01-12 03:05:03.846741 KST | [test0] num_train_batches      13.6667
2023-01-12 03:05:03.846785 KST | [test0] test/epoch_duration   322.058
2023-01-12 03:05:03.846820 KST | [test0] test/loss               5.39611
2023-01-12 03:05:03.846864 KST | [test0] train/epoch_duration    0.000843287
2023-01-12 03:05:03.846896 KST | [test0] train/loss             15.8026
2023-01-12 03:05:03.846929 KST | [test0] --------------------  -------------
epoch 1
Checking Batch 0 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 21
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 135.2155110836029
Checking Batch 1 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 22
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.95262551307678
Checking Batch 2 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 23
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.31962323188782
Checking Batch 3 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 24
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.1073784828186
Checking Batch 4 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 25
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.50043320655823
Checking Batch 5 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 26
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 134.34204077720642
Checking Batch 6 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 27
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.70683360099792
Checking Batch 7 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 28
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.27416253089905
Checking Batch 8 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 29
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.9850389957428
Checking Batch 9 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 30
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.76789569854736
Checking Batch 10 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 31
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 136.7550904750824
Checking Batch 11 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 32
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.98018670082092
Checking Batch 12 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 33
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.85639119148254
Checking Batch 13 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 34
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.5763189792633
Checking Batch 14 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 35
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.83206415176392
Checking Batch 15 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 36
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.0091049671173
Checking Batch 16 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 37
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.8689911365509
Checking Batch 17 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 38
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.27450013160706
Checking Batch 18 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 39
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.7081639766693
Checking Batch 19 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 40
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.0861358642578
Checking Batch 20 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
break
Trainer / Train
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
Test / Train
Time per Epoch 2983.9852850437164
2023-01-12 03:54:47.832583 KST | [test0] --------------------  -------------
2023-01-12 03:54:47.832697 KST | [test0] epoch                   1
2023-01-12 03:54:47.832730 KST | [test0] num_train_batches      33.6667
2023-01-12 03:54:47.832757 KST | [test0] test/epoch_duration   320.707
2023-01-12 03:54:47.832782 KST | [test0] test/loss               2.33472
2023-01-12 03:54:47.832806 KST | [test0] train/epoch_duration    0.000866175
2023-01-12 03:54:47.832830 KST | [test0] train/loss              3.31077
2023-01-12 03:54:47.832860 KST | [test0] --------------------  -------------
epoch 2
Checking Batch 0 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 41
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.83612179756165
Checking Batch 1 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 42
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.52424478530884
Checking Batch 2 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 43
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.71921062469482
Checking Batch 3 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 44
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.31411480903625
Checking Batch 4 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 45
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.79851460456848
Checking Batch 5 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 46
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.95167899131775
Checking Batch 6 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 47
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.1534252166748
Checking Batch 7 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 48
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.52507901191711
Checking Batch 8 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 49
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.38900470733643
Checking Batch 9 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 50
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.08866167068481
Checking Batch 10 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 51
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.4235029220581
Checking Batch 11 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 52
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.14559984207153
Checking Batch 12 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 53
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.5487518310547
Checking Batch 13 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 54
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.072425365448
Checking Batch 14 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 55
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.23906779289246
Checking Batch 15 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 56
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.94419145584106
Checking Batch 16 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 57
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.91349005699158
Checking Batch 17 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 58
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.81200981140137
Checking Batch 18 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 59
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.3945791721344
Checking Batch 19 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 60
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.1034698486328
Checking Batch 20 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
break
Trainer / Train
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
Test / Train
Time per Epoch 2972.2002894878387
2023-01-12 04:44:20.033394 KST | [test0] --------------------  -------------
2023-01-12 04:44:20.033495 KST | [test0] epoch                   2
2023-01-12 04:44:20.033531 KST | [test0] num_train_batches      53.6667
2023-01-12 04:44:20.033563 KST | [test0] test/epoch_duration   320.152
2023-01-12 04:44:20.033591 KST | [test0] test/loss               1.75664
2023-01-12 04:44:20.033610 KST | [test0] train/epoch_duration    0.000866175
2023-01-12 04:44:20.033627 KST | [test0] train/loss              2.03689
2023-01-12 04:44:20.033644 KST | [test0] --------------------  -------------
epoch 3
Checking Batch 0 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 61
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.45141220092773
Checking Batch 1 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 62
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.93011713027954
Checking Batch 2 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 63
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.49616122245789
Checking Batch 3 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 64
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.15373754501343
Checking Batch 4 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 65
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.16211938858032
Checking Batch 5 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 66
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.19685578346252
Checking Batch 6 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 67
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.3984522819519
Checking Batch 7 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 68
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.42455410957336
Checking Batch 8 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 69
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.14615726470947
Checking Batch 9 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 70
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.5355269908905
Checking Batch 10 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 71
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.39392232894897
Checking Batch 11 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 72
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.46958374977112
Checking Batch 12 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 73
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.24508690834045
Checking Batch 13 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 74
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.81587481498718
Checking Batch 14 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 75
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.32893347740173
Checking Batch 15 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 76
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.60893535614014
Checking Batch 16 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 77
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.39698147773743
Checking Batch 17 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 78
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.84977769851685
Checking Batch 18 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 79
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.25906443595886
Checking Batch 19 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 80
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.44393348693848
Checking Batch 20 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
break
Trainer / Train
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
Test / Train
Time per Epoch 2971.8766186237335
2023-01-12 05:33:51.910491 KST | [test0] --------------------  -------------
2023-01-12 05:33:51.910592 KST | [test0] epoch                   3
2023-01-12 05:33:51.910620 KST | [test0] num_train_batches      73.6667
2023-01-12 05:33:51.910640 KST | [test0] test/epoch_duration   321.009
2023-01-12 05:33:51.910668 KST | [test0] test/loss               1.36411
2023-01-12 05:33:51.910691 KST | [test0] train/epoch_duration    0.000867367
2023-01-12 05:33:51.910709 KST | [test0] train/loss              1.56423
2023-01-12 05:33:51.910726 KST | [test0] --------------------  -------------
epoch 4
Checking Batch 0 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 81
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.84891557693481
Checking Batch 1 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 82
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.81206583976746
Checking Batch 2 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 83
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.79753994941711
Checking Batch 3 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 84
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.59157705307007
Checking Batch 4 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 85
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.88258504867554
Checking Batch 5 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 86
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.05552625656128
Checking Batch 6 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 87
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.27956533432007
Checking Batch 7 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 88
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.48648977279663
Checking Batch 8 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 89
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.1951711177826
Checking Batch 9 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 90
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.68936586380005
Checking Batch 10 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 91
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.12039065361023
Checking Batch 11 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 92
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.82214498519897
Checking Batch 12 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 93
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.20775437355042
Checking Batch 13 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 94
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.83962845802307
Checking Batch 14 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 95
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.53917026519775
Checking Batch 15 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 96
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.1082866191864
Checking Batch 16 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 97
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.7326500415802
Checking Batch 17 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 98
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.71765732765198
Checking Batch 18 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 99
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.29039549827576
Checking Batch 19 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 100
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.61227226257324
Checking Batch 20 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
break
Trainer / Train
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
Test / Train
Time per Epoch 2967.1918444633484
2023-01-12 06:23:19.102810 KST | [test0] --------------------  -------------
2023-01-12 06:23:19.102929 KST | [test0] epoch                   4
2023-01-12 06:23:19.102962 KST | [test0] num_train_batches      93.6667
2023-01-12 06:23:19.102996 KST | [test0] test/epoch_duration   325.387
2023-01-12 06:23:19.103027 KST | [test0] test/loss               1.109
2023-01-12 06:23:19.103056 KST | [test0] train/epoch_duration    0.000867367
2023-01-12 06:23:19.103087 KST | [test0] train/loss              1.25879
2023-01-12 06:23:19.103106 KST | [test0] --------------------  -------------
epoch 5
Checking Batch 0 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 101
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.74230813980103
Checking Batch 1 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 102
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.39147329330444
Checking Batch 2 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 103
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.24499082565308
Checking Batch 3 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 104
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.1764554977417
Checking Batch 4 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 105
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.15495252609253
Checking Batch 5 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 106
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.99959087371826
Checking Batch 6 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 107
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.6911642551422
Checking Batch 7 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 108
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.9014482498169
Checking Batch 8 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 109
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.39538431167603
Checking Batch 9 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 110
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.58396887779236
Checking Batch 10 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 111
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.0814962387085
Checking Batch 11 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 112
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 130.73662996292114
Checking Batch 12 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 113
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.28956270217896
Checking Batch 13 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 114
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.8672959804535
Checking Batch 14 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 115
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.97025179862976
Checking Batch 15 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 116
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.3254919052124
Checking Batch 16 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 117
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.48713374137878
Checking Batch 17 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 118
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.49874114990234
Checking Batch 18 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 119
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.7611939907074
Checking Batch 19 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 120
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.04057121276855
Checking Batch 20 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
break
Trainer / Train
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
Test / Train
Time per Epoch 2961.142715215683
2023-01-12 07:12:40.246048 KST | [test0] --------------------  -------------
2023-01-12 07:12:40.246146 KST | [test0] epoch                   5
2023-01-12 07:12:40.246172 KST | [test0] num_train_batches     113.667
2023-01-12 07:12:40.246192 KST | [test0] test/epoch_duration   317.683
2023-01-12 07:12:40.246211 KST | [test0] test/loss               0.910604
2023-01-12 07:12:40.246229 KST | [test0] train/epoch_duration    0.000866652
2023-01-12 07:12:40.246246 KST | [test0] train/loss              0.992391
2023-01-12 07:12:40.246262 KST | [test0] --------------------  -------------
epoch 6
Checking Batch 0 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 121
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.35299134254456
Checking Batch 1 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 122
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.1622633934021
Checking Batch 2 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 123
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.11244177818298
Checking Batch 3 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 124
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.81791853904724
Checking Batch 4 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 125
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.84824585914612
Checking Batch 5 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 126
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.47022438049316
Checking Batch 6 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 127
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.52280592918396
Checking Batch 7 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 128
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.01915526390076
Checking Batch 8 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 129
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.0567286014557
Checking Batch 9 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 130
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.35857963562012
Checking Batch 10 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 131
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.48791551589966
Checking Batch 11 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 132
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.08447527885437
Checking Batch 12 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 133
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.76161646842957
Checking Batch 13 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 134
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.27012991905212
Checking Batch 14 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 135
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.77775835990906
Checking Batch 15 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 136
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.47766208648682
Checking Batch 16 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 137
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.73882865905762
Checking Batch 17 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 138
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.66824054718018
Checking Batch 18 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 139
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.98749136924744
Checking Batch 19 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 140
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.6024875640869
Checking Batch 20 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
break
Trainer / Train
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
Test / Train
Time per Epoch 2954.802214384079
2023-01-12 08:01:55.048707 KST | [test0] --------------------  -------------
2023-01-12 08:01:55.048804 KST | [test0] epoch                   6
2023-01-12 08:01:55.048833 KST | [test0] num_train_batches     133.667
2023-01-12 08:01:55.048856 KST | [test0] test/epoch_duration   318.064
2023-01-12 08:01:55.048876 KST | [test0] test/loss               0.761253
2023-01-12 08:01:55.048895 KST | [test0] train/epoch_duration    0.000874519
2023-01-12 08:01:55.048914 KST | [test0] train/loss              0.829743
2023-01-12 08:01:55.048932 KST | [test0] --------------------  -------------
epoch 7
Checking Batch 0 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 141
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.18806982040405
Checking Batch 1 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 142
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.41628885269165
Checking Batch 2 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 143
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.8699254989624
Checking Batch 3 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 144
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.80388140678406
Checking Batch 4 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 145
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.44116735458374
Checking Batch 5 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 146
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.09070110321045
Checking Batch 6 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 147
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.47742557525635
Checking Batch 7 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 148
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.0053150653839
Checking Batch 8 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 149
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.36837816238403
Checking Batch 9 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 150
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.82778072357178
Checking Batch 10 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 151
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.090256690979
Checking Batch 11 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 152
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.75596594810486
Checking Batch 12 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 153
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.233980178833
Checking Batch 13 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 154
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.51346635818481
Checking Batch 14 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 155
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.915949344635
Checking Batch 15 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 156
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.96017837524414
Checking Batch 16 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 157
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.8353099822998
Checking Batch 17 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 158
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 134.10568642616272
Checking Batch 18 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 159
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.18681287765503
Checking Batch 19 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 160
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.40290355682373
Checking Batch 20 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
break
Trainer / Train
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
Test / Train
Time per Epoch 2979.6252670288086
2023-01-12 08:51:34.674430 KST | [test0] --------------------  -------------
2023-01-12 08:51:34.674525 KST | [test0] epoch                   7
2023-01-12 08:51:34.674553 KST | [test0] num_train_batches     153.667
2023-01-12 08:51:34.674576 KST | [test0] test/epoch_duration   324.993
2023-01-12 08:51:34.674596 KST | [test0] test/loss               0.642698
2023-01-12 08:51:34.674613 KST | [test0] train/epoch_duration    0.000925064
2023-01-12 08:51:34.674630 KST | [test0] train/loss              0.703348
2023-01-12 08:51:34.674646 KST | [test0] --------------------  -------------
epoch 8
Checking Batch 0 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 161
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 135.76096868515015
Checking Batch 1 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 162
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 134.77684378623962
Checking Batch 2 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 163
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 135.35470390319824
Checking Batch 3 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 164
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 134.2153263092041
Checking Batch 4 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 165
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 134.98519659042358
Checking Batch 5 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 166
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 134.35556387901306
Checking Batch 6 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 167
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 134.89359545707703
Checking Batch 7 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 168
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 135.50557780265808
Checking Batch 8 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 169
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 135.59510278701782
Checking Batch 9 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 170
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 135.43888926506042
Checking Batch 10 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 171
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 135.71326160430908
Checking Batch 11 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 172
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 135.328049659729
Checking Batch 12 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 173
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 135.49871563911438
Checking Batch 13 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 174
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 134.83298015594482
Checking Batch 14 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 175
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 135.52648830413818
Checking Batch 15 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 176
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 134.5396625995636
Checking Batch 16 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 177
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 135.11780190467834
Checking Batch 17 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 178
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 134.634907245636
Checking Batch 18 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 179
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 136.91931676864624
Checking Batch 19 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 180
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 134.95011734962463
Checking Batch 20 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
break
Trainer / Train
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
Test / Train
Time per Epoch 3032.6362175941467
2023-01-12 09:42:07.311091 KST | [test0] --------------------  -------------
2023-01-12 09:42:07.311191 KST | [test0] epoch                   8
2023-01-12 09:42:07.311219 KST | [test0] num_train_batches     173.667
2023-01-12 09:42:07.311240 KST | [test0] test/epoch_duration   328.522
2023-01-12 09:42:07.311260 KST | [test0] test/loss               0.550946
2023-01-12 09:42:07.311278 KST | [test0] train/epoch_duration    0.000883102
2023-01-12 09:42:07.311295 KST | [test0] train/loss              0.6083
2023-01-12 09:42:07.311311 KST | [test0] --------------------  -------------
epoch 9
Checking Batch 0 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 181
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 135.59448838233948
Checking Batch 1 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 182
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 136.50437664985657
Checking Batch 2 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 183
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 135.90281867980957
Checking Batch 3 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 184
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 135.37911438941956
Checking Batch 4 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 185
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 136.0390374660492
Checking Batch 5 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 186
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 135.82483983039856
Checking Batch 6 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 187
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 136.82904601097107
Checking Batch 7 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 188
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 136.32900214195251
Checking Batch 8 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 189
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 136.71887397766113
Checking Batch 9 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 190
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 137.1515769958496
Checking Batch 10 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 191
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 136.3813123703003
Checking Batch 11 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 192
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 136.49689769744873
Checking Batch 12 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 193
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 135.29180097579956
Checking Batch 13 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 194
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 136.61310601234436
Checking Batch 14 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 195
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 135.50987792015076
Checking Batch 15 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 196
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 136.49822235107422
Checking Batch 16 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 197
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 137.47993874549866
Checking Batch 17 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 198
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 136.44454741477966
Checking Batch 18 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 199
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 137.47226810455322
Checking Batch 19 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 200
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 135.78401041030884
Checking Batch 20 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
break
Trainer / Train
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
Test / Train
e_indices.shape[0]  = 32768 1024
decode cond
x tensor([[[0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0],
         ...,
         [0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0]],

        [[0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0],
         ...,
         [0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0]]])
i 0
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 1
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 2
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 3
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 4
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 5
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 6
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 7
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 8
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 9
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 10
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 11
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 12
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 13
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 14
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 15
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 16
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 17
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 18
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 19
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 20
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 21
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 22
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 23
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 24
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 25
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 26
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 27
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 28
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 29
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 30
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 31
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
generate goal sample
e_indices.shape[0]  = 32768 2048
decode goal sample
e_indices.shape[0]  = 32768 1024
decode cond
x tensor([[[0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0],
         ...,
         [0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0]],

        [[0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0],
         ...,
         [0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0],
         [0, 0, 0,  ..., 0, 0, 0]]])
i 0
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 1
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 2
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 3
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 4
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 5
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 6
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 7
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 8
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 9
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 10
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 11
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 12
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 13
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 14
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 15
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 16
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 17
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 18
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 19
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 20
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 21
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 22
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 23
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 24
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 25
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 26
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 27
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 28
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 29
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 30
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
i 31
j 0
j 1
j 2
j 3
j 4
j 5
j 6
j 7
j 8
j 9
j 10
j 11
j 12
j 13
j 14
j 15
j 16
j 17
j 18
j 19
j 20
j 21
j 22
j 23
j 24
j 25
j 26
j 27
j 28
j 29
j 30
j 31
generate goal sample
e_indices.shape[0]  = 32768 2048
decode goal sample
Time per Epoch 8385.934931516647
2023-01-12 12:01:53.246497 KST | [test0] ---------------------  --------------
2023-01-12 12:01:53.246574 KST | [test0] epoch                     9
2023-01-12 12:01:53.246601 KST | [test0] num_train_batches       193.667
2023-01-12 12:01:53.246622 KST | [test0] test/epoch_duration     333.579
2023-01-12 12:01:53.246641 KST | [test0] test/loss                 0.519867
2023-01-12 12:01:53.246658 KST | [test0] train/epoch_duration      0.000926018
2023-01-12 12:01:53.246675 KST | [test0] train/loss                0.546038
2023-01-12 12:01:53.246692 KST | [test0] train/sample_duration  5325.94
2023-01-12 12:01:53.246709 KST | [test0] ---------------------  --------------
epoch 10
Checking Batch 0 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 201
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.37822914123535
Checking Batch 1 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 202
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.96879982948303
Checking Batch 2 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 203
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.9236044883728
Checking Batch 3 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 204
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.2976951599121
Checking Batch 4 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 205
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.0685625076294
Checking Batch 5 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 206
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.18614530563354
Checking Batch 6 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 207
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.69170498847961
Checking Batch 7 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 208
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.87157917022705
Checking Batch 8 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 209
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.54593229293823
Checking Batch 9 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 210
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.69455122947693
Checking Batch 10 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 211
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.96488547325134
Checking Batch 11 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 212
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.16345357894897
Checking Batch 12 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 213
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.9573917388916
Checking Batch 13 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 214
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.90953516960144
Checking Batch 14 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 215
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.39107298851013
Checking Batch 15 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 216
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.28338766098022
Checking Batch 16 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 217
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.71799993515015
Checking Batch 17 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 218
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.75441765785217
Checking Batch 18 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 219
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.02054643630981
Checking Batch 19 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 220
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.88826847076416
Checking Batch 20 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
break
Trainer / Train
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
Test / Train
Time per Epoch 2973.44855093956
2023-01-12 12:51:26.695483 KST | [test0] --------------------  -------------
2023-01-12 12:51:26.695580 KST | [test0] epoch                  10
2023-01-12 12:51:26.695617 KST | [test0] num_train_batches     213.667
2023-01-12 12:51:26.695639 KST | [test0] test/epoch_duration   321.729
2023-01-12 12:51:26.695660 KST | [test0] test/loss               0.462251
2023-01-12 12:51:26.695679 KST | [test0] train/epoch_duration    0.000949144
2023-01-12 12:51:26.695696 KST | [test0] train/loss              0.478994
2023-01-12 12:51:26.695713 KST | [test0] --------------------  -------------
epoch 11
Checking Batch 0 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 221
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.4712483882904
Checking Batch 1 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 222
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.05929923057556
Checking Batch 2 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 223
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.40586400032043
Checking Batch 3 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 224
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.6492145061493
Checking Batch 4 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 225
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.22152471542358
Checking Batch 5 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 226
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.7644112110138
Checking Batch 6 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 227
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.55018305778503
Checking Batch 7 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 228
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.70464324951172
Checking Batch 8 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 229
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.16321277618408
Checking Batch 9 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 230
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.67952728271484
Checking Batch 10 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 231
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.31844854354858
Checking Batch 11 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 232
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.28511142730713
Checking Batch 12 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 233
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.44147038459778
Checking Batch 13 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 234
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.30132508277893
Checking Batch 14 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 235
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.11484503746033
Checking Batch 15 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 236
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.91956329345703
Checking Batch 16 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 237
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 130.72372961044312
Checking Batch 17 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 238
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.40659475326538
Checking Batch 18 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 239
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.0014364719391
Checking Batch 19 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 240
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.31828355789185
Checking Batch 20 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
break
Trainer / Train
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
Test / Train
Time per Epoch 2962.451898097992
2023-01-12 13:40:49.147842 KST | [test0] --------------------  -------------
2023-01-12 13:40:49.147943 KST | [test0] epoch                  11
2023-01-12 13:40:49.147983 KST | [test0] num_train_batches     233.667
2023-01-12 13:40:49.148016 KST | [test0] test/epoch_duration   320.902
2023-01-12 13:40:49.148045 KST | [test0] test/loss               0.42149
2023-01-12 13:40:49.148073 KST | [test0] train/epoch_duration    0.000988007
2023-01-12 13:40:49.148092 KST | [test0] train/loss              0.45043
2023-01-12 13:40:49.148109 KST | [test0] --------------------  -------------
epoch 12
Checking Batch 0 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 241
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.2756323814392
Checking Batch 1 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 242
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 131.83527302742004
Checking Batch 2 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 243
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.5344521999359
Checking Batch 3 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 244
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 132.01325941085815
Checking Batch 4 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 245
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion
backward
Time for 1 batch 133.23486757278442
Checking Batch 5 Batches 20
LV + CLV, 1024 == root_len^2 torch.Size([32, 2048])
num of batch 246
e_indices.shape[0]  = 32768 32768
discrete to cond
x
GatedPixelCNN
Criterion

Process finished with exit code 137 (interrupted by signal 9: SIGKILL)
